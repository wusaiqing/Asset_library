
---------------------------------------------------------对象创建----创建表-------------------------------------------------------------

declare
      num   number;
begin
    select count(1) into num from user_tables where table_name = upper('TCHOC_BANNED_STUDENT') ;
    if num > 0 then
        execute immediate 'drop table TCHOC_BANNED_STUDENT' ;
    end if;

    select count(1) into num from user_tables where table_name = upper('TCHOC_CHOICE_LOG') ;
    if num > 0 then
        execute immediate 'drop table TCHOC_CHOICE_LOG' ;
    end if;

    select count(1) into num from user_tables where table_name = upper('TCHOC_CREDIT_NUM_LIMIT') ;
    if num > 0 then
        execute immediate 'drop table TCHOC_CREDIT_NUM_LIMIT' ;
    end if;

    select count(1) into num from user_tables where table_name = upper('TCHOC_ROUND') ;
    if num > 0 then
        execute immediate 'drop table TCHOC_ROUND' ;
    end if;
    
    select count(1) into num from user_tables where table_name = upper('TCHOC_CHOICE_COURSE') ;
    if num > 0 then
        execute immediate 'drop table TCHOC_CHOICE_COURSE' ;
    end if;
	select count(1) into num from user_tables where table_name = upper('TCHOC_CHOICE_MAJOR') ;
    if num > 0 then
        execute immediate 'drop table TCHOC_CHOICE_MAJOR' ;
    end if;
	select count(1) into num from user_tables where table_name = upper('TCHOC_TEACHING_CLASS_STUDENT') ;
    if num > 0 then
        execute immediate 'drop table TCHOC_TEACHING_CLASS_STUDENT' ;
    end if;
end;
/


/*==============================================================*/
/* Table: TCHOC_BANNED_STUDENT   禁选学生表                               */
/*==============================================================*/
create table TCHOC_BANNED_STUDENT 
(
   BANNED_STUDENT_ID    NVARCHAR2(50)        not null,
   CHOICE_MAJOR_ID      NVARCHAR2(50)        not null,
   USER_ID              NVARCHAR2(50)        not null,
   CREATE_USER_ID       NVARCHAR2(50)        not null,
   CREATE_TIME          TIMESTAMP            not null,
   constraint PK_TCHOC_BANNED_STUDENT primary key (BANNED_STUDENT_ID)
);

/*==============================================================*/
/* Table: TCHOC_CHOICE_COURSE   选课课程表                                */
/*==============================================================*/
create table TCHOC_CHOICE_COURSE 
(
   CHOICE_COURSE_ID     NVARCHAR2(50)        not null,
   ACADEMIC_YEAR        INTEGER              not null,
   SEMESTER_CODE        NVARCHAR2(50)        not null,
   ROUND_ID             NVARCHAR2(50)        not null,
   COURSE_ID            NVARCHAR2(50)        not null,
   CREATE_USER_ID       NVARCHAR2(50)        not null,
   CREATE_TIME          TIMESTAMP            not null,
   constraint PK_TCHOC_CHOICE_COURSE primary key (CHOICE_COURSE_ID)
);

/*==============================================================*/
/* Table: TCHOC_CHOICE_LOG       选课日志表                               */
/*==============================================================*/
create table TCHOC_CHOICE_LOG 
(
   CHOICE_LOG_ID        NVARCHAR2(50)        not null,
   ACADEMIC_YEAR        INTEGER              not null,
   SEMESTER_CODE        NVARCHAR2(50)        not null,
   USER_ID              NVARCHAR2(50)        not null,
   ROUND_ID             NVARCHAR2(50),
   THEORETICAL_TASK_ID  NVARCHAR2(50)        not null,
   CHOICE_STATUS        INTEGER              not null,
   CHOICE_WAY           INTEGER              not null,
   CHOICE_TIME          TIMESTAMP            not null,
   CHOICE_IP            NVARCHAR2(50)        not null,
   REMARK               NVARCHAR2(500),
   CREATE_USER_ID       NVARCHAR2(50)        not null,
   CREATE_TIME          TIMESTAMP            not null,
   constraint PK_TCHOC_CHOICE_LOG primary key (CHOICE_LOG_ID)
);

CREATE INDEX IX_TCHOC_LOG_ROUND ON TCHOC_CHOICE_LOG (ROUND_ID ASC); -- 轮次索引

CREATE INDEX IX_TCHOC_LOG_SEMESTER ON TCHOC_CHOICE_LOG (ACADEMIC_YEAR DESC, SEMESTER_CODE DESC); --学年学期索引

CREATE INDEX IX_TCHOC_LOG_STUDENT ON TCHOC_CHOICE_LOG (ACADEMIC_YEAR DESC, SEMESTER_CODE DESC, USER_ID ASC); -- 学年学期 学生索引




/*==============================================================*/
/* Table: TCHOC_CHOICE_MAJOR     选课专业表                               */
/*==============================================================*/
create table TCHOC_CHOICE_MAJOR 
(
   CHOICE_MAJOR_ID      NVARCHAR2(50)        not null,
   ACADEMIC_YEAR        INTEGER              not null,
   SEMESTER_CODE        NVARCHAR2(50)        not null,
   ROUND_ID             NVARCHAR2(50)        not null,
   GRADE                INTEGER,
   MAJOR_ID             NVARCHAR2(50),
   GRADE_MAJOR_ID       NVARCHAR2(50)        not null,
   CREATE_USER_ID       NVARCHAR2(50)        not null,
   CREATE_TIME          TIMESTAMP            not null,
   constraint PK_TCHOC_CHOICE_MAJOR primary key (CHOICE_MAJOR_ID)
);


/*==============================================================*/
/* Table: TCHOC_CREDIT_NUM_LIMIT   专业学分门数上限表                             */
/*==============================================================*/
create table TCHOC_CREDIT_NUM_LIMIT 
(
   CREDIT_NUM_LIMIT_ID  NVARCHAR2(50)        not null,
   ACADEMIC_YEAR        INTEGER              not null,
   SEMESTER_CODE        NVARCHAR2(50)        not null,
   GRADE                INTEGER,
   MAJOR_ID             NVARCHAR2(50),
   GRADE_MAJOR_ID       NVARCHAR2(50),
   COURSE_TYPE_CODE     NVARCHAR2(50)        not null,
   COURSE_ATTRIBUTE_CODE NVARCHAR2(50),
   CREDIT_LIMIT         NUMBER(3,1),
   COURSE_NUM_LIMIT     NUMBER(3),
   CREATE_USER_ID       NVARCHAR2(50)        not null,
   CREATE_TIME          TIMESTAMP            not null,
   UPDATE_USER_ID       NVARCHAR2(50)        not null,
   UPDATE_TIME          TIMESTAMP            not null,
   constraint PK_TCHOC_CREDIT_NUM_LIMIT primary key (CREDIT_NUM_LIMIT_ID)
);


/*==============================================================*/
/* Table: TCHOC_ROUND   选课轮次表                                        */
/*==============================================================*/
create table TCHOC_ROUND 
(
   ROUND_ID             NVARCHAR2(50)        not null,
   ACADEMIC_YEAR        INTEGER              not null,
   SEMESTER_CODE        NVARCHAR2(50)        not null,
   ROUND_NAME           NVARCHAR2(50)        not null,
   START_TIME           TIMESTAMP            not null,
   END_TIME             TIMESTAMP            not null,
   EXIT_CONTROL         INTEGER              not null,
   IS_AT_SCHOOL         INTEGER              not null,
   IS_ARCHIVE           INTEGER              not null,
   IS_REGISTER          INTEGER              not null,
   IS_TRANS_CAMPUS      INTEGER              not null,
   IS_OPENED            INTEGER              not null,
   REMARK               NVARCHAR2(200),
   CREATE_USER_ID       NVARCHAR2(50)        not null,
   CREATE_TIME          TIMESTAMP            not null,
   UPDATE_USER_ID       NVARCHAR2(50)        not null,
   UPDATE_TIME          TIMESTAMP            not null,
   constraint PK_TCHOC_ROUND primary key (ROUND_ID)
);


/*==============================================================*/
/* Table: TCHOC_TEACHING_CLASS_STUDENT  学生选课表                        */
/*==============================================================*/
create table TCHOC_TEACHING_CLASS_STUDENT 
(
   TEACHING_CLASS_STUDENT_ID NVARCHAR2(50)        not null,
   ACADEMIC_YEAR        INTEGER              not null,
   SEMESTER_CODE        NVARCHAR2(50)        not null,
   ROUND_ID             NVARCHAR2(50),
   USER_ID              NVARCHAR2(50)        not null,
   THEORETICAL_TASK_ID  NVARCHAR2(50)        not null,
   CHOICE_WAY           INTEGER              not null,
   IS_ADJUST            INTEGER,
   CREATE_USER_ID       NVARCHAR2(50)        not null,
   CREATE_TIME          TIMESTAMP            not null,
   constraint PK_TCHOC_TEACHING_CLASS_STUDEN primary key (TEACHING_CLASS_STUDENT_ID)
);

CREATE INDEX IX_TCHOC_ROUND ON TCHOC_TEACHING_CLASS_STUDENT (ROUND_ID ASC); -- 轮次索引

CREATE INDEX IX_TCHOC_SEMESTER ON TCHOC_TEACHING_CLASS_STUDENT (ACADEMIC_YEAR DESC, SEMESTER_CODE DESC); --学年学期索引

CREATE INDEX IX_TCHOC_STUDENT ON TCHOC_TEACHING_CLASS_STUDENT (ACADEMIC_YEAR DESC, SEMESTER_CODE DESC, USER_ID ASC); -- 学年学期 用户索引

CREATE INDEX IX_TCHOC_TEACHING ON TCHOC_TEACHING_CLASS_STUDENT (THEORETICAL_TASK_ID ASC); -- 教学班索引


----------------------------------------------------------对象创建-----创建选课管理视图-------------------------------------------------------------
-- 1获取选课专业 VCHOC_CHOICE_OPEN_MAJOR	
/*==============================================================*/
/* VIEW: VCHOC_CHOICE_OPEN_MAJOR  获取选课专业                       */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CHOICE_OPEN_MAJOR
AS
SELECT
	(
		SP.STARTCLASS_PLAN_ID || '#' || CM.CHOICE_MAJOR_ID
	) ID,
	SP.ACADEMIC_YEAR,
	SP.SEMESTER_CODE,
	SP.GRADE_MAJOR_ID,
	GM.GRADE,
	GM.MAJOR_ID,
	MA.MAJOR_NAME,
	MA.DEPARTMENT_ID,
	MA.TRAINING_LEVEL_CODE,
	(
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = MA.TRAINING_LEVEL_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'PYCC'
		)
	) TRAINING_LEVEL_NAME,
	DE.DEPARTMENT_NAME,
	CM.CHOICE_MAJOR_ID,
	CM.ROUND_ID,
	NVL (BA.USERNUM, 0) USERNUM
FROM
	TTRAP_STARTCLASS_PLAN SP
LEFT JOIN TTRAP_GRADE_MAJOR GM ON GM.GRADE_MAJOR_ID = SP.GRADE_MAJOR_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = GM.MAJOR_ID
LEFT JOIN TSYS_DEPARTMENT DE ON DE.DEPARTMENT_ID = MA.DEPARTMENT_ID
LEFT JOIN TCHOC_CHOICE_MAJOR CM ON (
	CM.GRADE_MAJOR_ID = SP.GRADE_MAJOR_ID
	AND CM.ACADEMIC_YEAR = SP.ACADEMIC_YEAR
	AND CM.SEMESTER_CODE = SP.SEMESTER_CODE
)
LEFT JOIN (
	SELECT
		CHOICE_MAJOR_ID,
		COUNT (1) USERNUM
	FROM
		TCHOC_BANNED_STUDENT
	GROUP BY
		CHOICE_MAJOR_ID -- 按照选择专业Id分组
) BA ON BA.CHOICE_MAJOR_ID = CM.CHOICE_MAJOR_ID -- 得到已禁选学生数
WHERE
SP.TEMP_FLAG = 0 -- 非临时数据
AND SP.CLASS_TYPE = 1 -- 是课程
;

-- 2获取选课学生 VCHOC_CHOICE_STUDENT
/*==============================================================*/
/* VIEW: VCHOC_CHOICE_STUDENT  获取选课学生                       */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CHOICE_STUDENT
AS
SELECT
	(
		STU.USER_ID || '#' || AR.ARCHIVES_REGISTER_ID||'#'||CM.CHOICE_MAJOR_ID
	) ID,
	STU.USER_ID,
	STU.STUDENT_NAME,
	STU.STUDENT_NO,
	STU.SEX_CODE,
	STU.GRADE,
	AR.CLASS_ID,
	CL.CLASS_NAME,
	CL.MAJOR_ID,
	MA.MAJOR_NAME,
	AR.ACADEMIC_YEAR,
	AR.SEMESTER_CODE,
	RE.REGISTER_STATUS,
	AR.SCHOOL_STATUS_CODE,
	AR.ARCHIEVES_STATUS_CODE,
	CM.CHOICE_MAJOR_ID,
	CM.ROUND_ID,
	(
		SELECT
			COUNT (BANNED_STUDENT_ID)
		FROM
			TCHOC_BANNED_STUDENT BA
		WHERE
			BA.USER_ID = STU.USER_ID
		AND BA.CHOICE_MAJOR_ID = CM.CHOICE_MAJOR_ID
	) USERNUM -- 当前学生Id是否已禁选，1表示禁选，0表示没有
FROM
	TSTU_STUDENT STU
LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON AR.USER_ID = STU.USER_ID
LEFT JOIN TSTU_REGISTER RE ON 
(
	RE.USER_ID = STU.USER_ID
	AND RE.ACADEMIC_YEAR = AR.ACADEMIC_YEAR
	AND RE.SEMESTER_CODE = AR.SEMESTER_CODE
)
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.CLASS_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID
LEFT JOIN TCHOC_CHOICE_MAJOR CM ON (
	CL.MAJOR_ID = CM.MAJOR_ID
	AND CL.GRADE = CM.GRADE
	AND AR.ACADEMIC_YEAR = CM.ACADEMIC_YEAR			
	AND AR.SEMESTER_CODE = CM.SEMESTER_CODE			
);
	
-- 3选择课程	VCHOC_CHOICE_OPEN_COURSE
/*==============================================================*/
/* VIEW: VCHOC_CHOICE_OPEN_COURSE  选择课程                       */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CHOICE_OPEN_COURSE
AS
SELECT
	(
		ST.SCHEDULING_TASK_ID || '#' || CC.CHOICE_COURSE_ID
	) ID,
	ST.ACADEMIC_YEAR,
	ST.SEMESTER_CODE,
	TC.DEPARTMENT_ID AS OPEN_DEPARTMENT_ID,
	TD.DEPARTMENT_NAME AS OPEN_DEPARTMENT_NAME,
	ST.COURSE_ID,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	TC.CREDIT,
	GM.GRADE,
	MA.DEPARTMENT_ID,
	GM.MAJOR_ID,
	MA.TRAINING_LEVEL_CODE,
	SP.CHECK_WAY_CODE,
	SP.IS_CORE_CURRICULUM,
	CC.ROUND_ID,
	CC.CHOICE_COURSE_ID
FROM
	TCOUP_SCHEDULING_TASK ST
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = ST.THEORETICAL_TASK_ID
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 得到通识课 考核方式
LEFT JOIN TTRAP_GRADE_MAJOR GM ON SP.GRADE_MAJOR_ID = GM.GRADE_MAJOR_ID -- 得到年级 得到专业
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = GM.MAJOR_ID --  得到院系 培养层次
LEFT JOIN TTRAP_COURSE TC ON ST.COURSE_ID = TC.COURSE_ID -- 得到开课单位 课程号 课程名称 学分
LEFT JOIN TSYS_DEPARTMENT TD ON TC.DEPARTMENT_ID = TD.DEPARTMENT_ID -- 得到开课单位名称
LEFT JOIN TCHOC_CHOICE_COURSE CC ON (
	CC.COURSE_ID = ST.COURSE_ID
	AND CC.ACADEMIC_YEAR = ST.ACADEMIC_YEAR
	AND CC.SEMESTER_CODE = ST.SEMESTER_CODE
);

-- 4批量选课 VCHOC_BATCH_CHOICE_COURSE
/*==============================================================*/
/* VIEW: VCHOC_BATCH_CHOICE_COURSE  批量选课                       */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_BATCH_CHOICE_COURSE
AS
SELECT
    DISTINCT AA.THEORETICAL_TASK_ID,--教学班Id
	AA.ACADEMIC_YEAR,	--学年
	AA.SEMESTER_CODE,	--学期
	AA.OPEN_DEPARTMENT_ID,	--开课单位Id
	AA.COURSE_ID,	--课程Id
	AA.OPEN_DEPARTMENT_NAME,	--开课单位名称
	AA.COURSE_NO,--课程号
	AA.COURSE_NAME,--课程名称
	AA.CREDIT,-- 学分
  AA.WEEK_LIST,-- 排课任务（排课周）
	AA.SECTION_LIST,-- 排课任务（排课节次）
	TT.TEACHING_CLASS_NO,	-- 教学班号
	TEA.TEACHER_NAME TEACHER_LIST,	--任课老师
	TT.TEACHING_CLASS_MEMBER_COUNT,	--教学班人数
	NVL (TCLA.CLASSNUM, 0) CLASSNUM,	--行政班数
	TCLA.CLASS_IDS,	--行政班Ids
	TT.CHOICE_LIMIT,	--教学班可选人数上限
	NVL (CHOICED.CHOICEDNUM, 0) CHOICEDNUM,	--已选人数
	CC.CHOICED_COURSE_NUM,	--轮次中已选课程数
	(
		SELECT
			COUNT (1)
		FROM
			TCOUP_THEORETICAL_CLASS cla
		LEFT JOIN TCOUP_THEORETICAL_TASK TAS ON TAS.THEORETICAL_TASK_ID = CLA.THEORETICAL_TASK_ID
		WHERE
			CLASSNUM = 1
		AND CLA.CLASS_ID = TCLA.CLASS_IDS
		AND TAS.COURSE_ID = AA.COURSE_ID
    AND TAS.ACADEMIC_YEAR = AA.ACADEMIC_YEAR
		AND TAS.SEMESTER_CODE = AA.SEMESTER_CODE
    AND TAS.IS_DELETED=0  -- 同一学期下同一个课程，行政班和教学班一对一
		--AND TAS.THEORETICAL_TASK_ID=AA.THEORETICAL_TASK_ID
	) TEANUM, -- 值为1时，同一个课程，行政班和教学班一对一
	(
		SELECT
			COUNT (1)
		FROM
			TSTU_STUDENT STU
		LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON AR.USER_ID = STU.USER_ID
		WHERE
			AR.ACADEMIC_YEAR = AA.ACADEMIC_YEAR
		AND AR.SEMESTER_CODE = AA.SEMESTER_CODE
		AND CLASSNUM = 1
		AND AR.CLASS_ID = TCLA.CLASS_IDS
		AND AR.SCHOOL_STATUS_CODE = '001'
	) CLASS_STUNUM, -- 一个行政班对应一个教学班（等于1表示）的：行政班在校人数
    SP.COURSE_TYPE_CODE,	--课程类别
	SP.COURSE_ATTRIBUTE_CODE,	--课程属性
	SP.IS_CORE_CURRICULUM	--是否通识课
FROM
	(
		SELECT
			ST.ACADEMIC_YEAR,
			ST.SEMESTER_CODE,
			TC.DEPARTMENT_ID AS OPEN_DEPARTMENT_ID,
			ST.COURSE_ID,
			ST.THEORETICAL_TASK_ID,
			TD.DEPARTMENT_NAME AS OPEN_DEPARTMENT_NAME,
			TC.COURSE_NO,
			TC. NAME AS COURSE_NAME,
			TC.CREDIT,
			wm_concat (TO_CHAR (CONCAT (REPLACE(ST.COURSE_ARRANGE_WEEK_LIST,',',';'),''))) AS WEEK_LIST,-- 排课周,排课周
			wm_concat (TO_CHAR (CONCAT (REPLACE(ST.COURSE_ARRANGE_SECTION,',',';'),''))) AS SECTION_LIST -- 排课节次,排课节次
		FROM
			TCOUP_SCHEDULING_TASK ST -- 排课结果
		LEFT JOIN TTRAP_COURSE TC ON ST.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
		LEFT JOIN TSYS_DEPARTMENT TD ON TC.DEPARTMENT_ID = TD.DEPARTMENT_ID -- 单位 得到开课单位
		GROUP BY
			ST.ACADEMIC_YEAR,
			ST.SEMESTER_CODE,
			TC.DEPARTMENT_ID,
			ST.COURSE_ID,
			ST.THEORETICAL_TASK_ID,
			TD.DEPARTMENT_NAME,
			TC.COURSE_NO,
			TC. NAME,
			TC.CREDIT -- 对排课结果进行分组
	) AA
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON AA.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论课程
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (wm_concat (TO_CHAR (CONCAT (CONCAT ('[',CONCAT (TT.TEACHER_NO, ']')),tt.TEACHER_NAME))),',','、') AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID -- 按教学班Id分组 得到任课老师组合
) TEA ON TT.THEORETICAL_TASK_ID = TEA.THEORETICAL_TASK_ID
LEFT JOIN (
-- 	SELECT
-- 		THEORETICAL_TASK_ID,
-- 		COUNT (1) CLASSNUM
-- 		wm_concat (TO_CHAR (CONCAT(CLASS_ID, ''))) AS CLASS_IDS
-- 	FROM
-- 		TCOUP_THEORETICAL_CLASS
-- 	GROUP BY
-- 		THEORETICAL_TASK_ID -- 按教学班Id分组
SELECT
	AA.THEORETICAL_TASK_ID,
	AA.CLASSNUM,
	BB.CLASS_ID AS CLASS_IDS
FROM
	TCOUP_THEORETICAL_CLASS BB
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
		COUNT (1) CLASSNUM --wm_concat (TO_CHAR (CONCAT(CLASS_ID, ''))) AS CLASS_IDS
	FROM
		TCOUP_THEORETICAL_CLASS
	GROUP BY
		THEORETICAL_TASK_ID -- 按教学班Id分组
) AA ON AA.THEORETICAL_TASK_ID=BB.THEORETICAL_TASK_ID
WHERE
	AA.CLASSNUM = 1
) TCLA ON TCLA.THEORETICAL_TASK_ID = AA.THEORETICAL_TASK_ID -- 得到 班级数量和班级Ids
LEFT JOIN (
	SELECT
    ACADEMIC_YEAR,
		SEMESTER_CODE,
		THEORETICAL_TASK_ID,
		COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT
	GROUP BY
    ACADEMIC_YEAR,
		SEMESTER_CODE,
		THEORETICAL_TASK_ID -- 按教学班Id分组
) CHOICED ON (AA.THEORETICAL_TASK_ID = CHOICED.THEORETICAL_TASK_ID AND CHOICED.ACADEMIC_YEAR = AA.ACADEMIC_YEAR AND CHOICED.SEMESTER_CODE = AA.SEMESTER_CODE)-- 得到 已选人数
LEFT JOIN (
	SELECT
		ACADEMIC_YEAR,
		SEMESTER_CODE,
		COURSE_ID,
		COUNT (1) CHOICED_COURSE_NUM
	FROM
		TCHOC_CHOICE_COURSE
	GROUP BY
		ACADEMIC_YEAR,
		SEMESTER_CODE,
		COURSE_ID -- 是否在轮次课程中
) CC ON (
	CC.COURSE_ID = AA.COURSE_ID
	AND CC.ACADEMIC_YEAR = AA.ACADEMIC_YEAR
	AND CC.SEMESTER_CODE = AA.SEMESTER_CODE
) -- 得到 已选课程
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = AA.THEORETICAL_TASK_ID -- 理论任务关联开课计划表
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID   -- 开课计划
;	
	
-- 5已选课的学生集合 VCHOC_TEACHING_CHOICE_STUDENT
/*==============================================================*/
/* VIEW: VCHOC_TEACHING_CHOICE_STUDENT  已选课的学生集合                       */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_TEACHING_CHOICE_STUDENT
AS
SELECT
	DISTINCT TCS.TEACHING_CLASS_STUDENT_ID,-- 已选课学生Id
    TCS.USER_ID,-- 学生Id
	STU.STUDENT_NAME,-- 学生姓名
	STU.STUDENT_NO,-- 学号
	STU.SEX_CODE,-- 性别
	CL.GRADE,-- 年级
	AR.CLASS_ID,-- 班级Id
	CL.CLASS_NAME,-- 班级名称
	CL.MAJOR_ID,-- 专业Id
	MA.MAJOR_NAME,-- 专业名称
	MA.DEPARTMENT_ID,-- 院系Id
	DE.DEPARTMENT_NAME,-- 院系名称
	TCS.ACADEMIC_YEAR,-- 学年
	TCS.SEMESTER_CODE,-- 学期
	TCS.CHOICE_WAY,-- 选课方式
	TCS.CREATE_TIME,--选课时间
	TT.COURSE_ID,-- 课程Id
    TC.COURSE_NO, -- 课程号
	TC. NAME AS COURSE_NAME, --课程名称
    TC.CREDIT,-- 学分
	SP.COURSE_TYPE_CODE,-- 课程类别
	SP.COURSE_ATTRIBUTE_CODE,--课程属性
	SP.IS_CORE_CURRICULUM,-- 是否通识课
	SP.CHECK_WAY_CODE,-- 考核方式
	TC.DEPARTMENT_ID AS OPEN_DEPARTMENT_ID, -- 开课单位名称
	TD.DEPARTMENT_NAME AS OPEN_DEPARTMENT_NAME,-- 开课单位Id
	TCS.THEORETICAL_TASK_ID,-- 教学班Id
	TT.TEACHING_CLASS_NO,-- 教学班号
	TEA.TEACHER_NAME TEACHER_LIST,-- 任课教师
  TCLA.WEEK_LIST,-- 排课任务（排课周）
	TCLA.SECTION_LIST,-- 排课任务（排课节次）
  TCS.IS_ADJUST
FROM
	TCHOC_TEACHING_CLASS_STUDENT TCS
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 得到 教学班班号
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TCS.THEORETICAL_TASK_ID -- 关联中间表得到 开课计划Id
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 得到 通识课 考核方式 课程类型
LEFT JOIN TTRAP_COURSE TC ON SP.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称 学分 考核方式
LEFT JOIN TSYS_DEPARTMENT TD ON TC.DEPARTMENT_ID = TD.DEPARTMENT_ID -- 得到开课单位名称
LEFT JOIN TSTU_STUDENT STU ON TCS.USER_ID = STU.USER_ID -- 学生信息
LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON (
	AR.USER_ID = STU.USER_ID
	AND TCS.ACADEMIC_YEAR = AR.ACADEMIC_YEAR
	AND TCS.SEMESTER_CODE = AR.SEMESTER_CODE
)
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.CLASS_ID-- 班级信息
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID-- 专业信息
LEFT JOIN TSYS_DEPARTMENT DE ON DE.DEPARTMENT_ID = MA.DEPARTMENT_ID -- 院系信息
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (wm_concat (TO_CHAR (CONCAT (CONCAT ('[',CONCAT (TT.TEACHER_NO, ']')),tt.TEACHER_NAME))),',','、') AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID -- 按教学班Id分组 得到任课老师组合
) TEA ON TCS.THEORETICAL_TASK_ID = TEA.THEORETICAL_TASK_ID
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
			wm_concat (TO_CHAR (CONCAT (REPLACE(COURSE_ARRANGE_WEEK_LIST,',',';'),''))) AS WEEK_LIST,-- 排课周,排课周
			wm_concat (TO_CHAR (CONCAT (REPLACE(COURSE_ARRANGE_SECTION,',',';'),''))) AS SECTION_LIST -- 排课节次,排课节次
	FROM
		TCOUP_SCHEDULING_TASK
	GROUP BY
		THEORETICAL_TASK_ID -- 按教学班Id分组
) TCLA ON TCLA.THEORETICAL_TASK_ID = TCS.THEORETICAL_TASK_ID -- 得到该教学班所有排课时间
;

-- 6可选课的学生集合 VCHOC_TEACHING_WANT_STUDENT
/*==============================================================*/
/* VIEW: VCHOC_TEACHING_WANT_STUDENT  可选课的学生集合                       */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_TEACHING_WANT_STUDENT
AS
SELECT
	(
		STU.USER_ID || '#' || THC.THEORETICAL_TASK_ID
	) ID,
	STU.USER_ID,	--学生Id
	STU.STUDENT_NAME,--学生姓名
	STU.STUDENT_NO,--学号
	STU.SEX_CODE,--性别
	CL.GRADE,--年级
	AR.CLASS_ID,--班级Id
	CL.CLASS_NAME,--班级名称
	CL.MAJOR_ID,--专业Id
	TT.THEORETICAL_TASK_ID,--该学生该学期可选教学班Id  
	TT.COURSE_ID,
	AR.ACADEMIC_YEAR,-- 学年
	AR.SEMESTER_CODE,-- 学期
	AR.SCHOOL_STATUS_CODE,-- 学籍中在校状态
	(
		CASE
		WHEN (
			TEAC.THEORETICAL_TASK_ID IS NOT NULL
			AND TEAC.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
		) THEN
			1
		WHEN (
			TEAC.THEORETICAL_TASK_ID IS NOT NULL
			AND TEAC.THEORETICAL_TASK_ID <> TT.THEORETICAL_TASK_ID
		) THEN
			2
		ELSE
			0
		END
	) USERNUM -- 2表示已选该课程的其他教学班 1表示已选该教学班 0表示未选该教学班
FROM
	TSTU_STUDENT STU
LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON (AR.USER_ID = STU.USER_ID)
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.CLASS_ID
LEFT JOIN TCOUP_THEORETICAL_CLASS THC ON THC.CLASS_ID = AR.CLASS_ID -- 得到教学班Id
JOIN TCOUP_THEORETICAL_TASK TT ON (
	THC.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
	AND AR.ACADEMIC_YEAR = TT.ACADEMIC_YEAR
	AND AR.SEMESTER_CODE = TT.SEMESTER_CODE
) -- 得到 教学班学年学期
LEFT JOIN (
	SELECT
		TCS.ACADEMIC_YEAR,
		TCS.SEMESTER_CODE,
		TCS.USER_ID,
		TCS.THEORETICAL_TASK_ID,
		TTT.COURSE_ID
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TCS
	LEFT JOIN TCOUP_THEORETICAL_TASK TTT ON TCS.THEORETICAL_TASK_ID = TTT.THEORETICAL_TASK_ID
) TEAC ON (
	TEAC.USER_ID = STU.USER_ID
	AND AR.ACADEMIC_YEAR = TEAC.ACADEMIC_YEAR
	AND AR.SEMESTER_CODE = TEAC.SEMESTER_CODE
	AND TEAC.COURSE_ID = TT.COURSE_ID
);

--7 可选课的学生集合-课程类型学分及门数上限 VCHOC_TEACHING_STUDENT_LIMIT	
/*==============================================================*/
/* VIEW: VCHOC_TEACHING_STUDENT_LIMIT  可选课的学生集合-课程类型学分及门数上限                       */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_TEACHING_STUDENT_LIMIT
AS
SELECT
   (
		STU.USER_ID || '#' || THC.THEORETICAL_TASK_ID || CNL.CREDIT_NUM_LIMIT_ID
	) ID,
	STU.USER_ID,--学生Id
	STU.STUDENT_NAME,--学生姓名
	STU.STUDENT_NO,--学号
	STU.SEX_CODE,--性别
	CL.GRADE,--年级
	AR.CLASS_ID,--班级Id
	CL.CLASS_NAME,--班级名称
	CL.MAJOR_ID,--专业Id
	THC.THEORETICAL_TASK_ID,--教学班Id
	AR.ACADEMIC_YEAR,-- 学年
	AR.SEMESTER_CODE,	-- 学期
	CNL.COURSE_TYPE_CODE,-- 课程类别
	CNL.COURSE_ATTRIBUTE_CODE,--课程属性
	CNL.CREDIT_LIMIT,-- 学分上限
	CNL.COURSE_NUM_LIMIT-- 门数上限
FROM
	TSTU_STUDENT STU
LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON AR.USER_ID = STU.USER_ID
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.CLASS_ID
LEFT JOIN TCOUP_THEORETICAL_CLASS THC ON THC.CLASS_ID = AR.CLASS_ID -- 得到教学班Id
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON (
   THC.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID 
   AND AR.ACADEMIC_YEAR = TT.ACADEMIC_YEAR 
   AND AR.SEMESTER_CODE = TT.SEMESTER_CODE)-- 得到 教学班学年学期
LEFT JOIN TCHOC_CREDIT_NUM_LIMIT CNL ON (
	CNL.ACADEMIC_YEAR = TT.ACADEMIC_YEAR
	AND CNL.SEMESTER_CODE = TT.SEMESTER_CODE
	AND CNL.GRADE = CL.GRADE
	AND CNL.MAJOR_ID = CL.MAJOR_ID)
;

/*==============================================================*/
/* VIEW: VCHOC_ADJUST_SELECT_COURSE   调整学生选课  补选课程视图                          */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_ADJUST_SELECT_COURSE
AS
SELECT DISTINCT
	ST.TC.COURSE_ID,
	ST.ACADEMIC_YEAR,
	ST.SEMESTER_CODE,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	SP.COURSE_TYPE_CODE,
	(
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = SP.COURSE_TYPE_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GTA_COURSE_CATEGORY'
		)
	) || (
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = SP.COURSE_ATTRIBUTE_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GTA_COURSE_ATTRIBUTE'
		)
	) AS COURSE_TYPE_NAME,
	TC.CREDIT,
	SP.COURSE_ATTRIBUTE_CODE,
	SP.IS_CORE_CURRICULUM,
	THC.CLASS_ID
FROM
	TCOUP_SCHEDULING_TASK ST -- 排课结果
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON ST.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论课程
LEFT JOIN TCOUP_THEORETICAL_CLASS THC ON THC.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 得到教学班Id
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论任务关联开课计划表
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 开课计划
LEFT JOIN TTRAP_GRADE_MAJOR GM ON SP.GRADE_MAJOR_ID = GM.GRADE_MAJOR_ID -- 年级专业 
LEFT JOIN TTRAP_COURSE TC ON ST.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
WHERE
	TC.COURSE_OR_TACHE = 1 -- 非环节课程
GROUP BY
	TC.COURSE_ID,
	ST.ACADEMIC_YEAR,
	GM.MAJOR_ID,
	ST.SEMESTER_CODE,
	TC.COURSE_NO,
	TC. NAME,
	SP.COURSE_TYPE_CODE,
	TC.CREDIT,
	SP.COURSE_ATTRIBUTE_CODE,
	SP.IS_CORE_CURRICULUM,
	THC.CLASS_ID
ORDER BY
	TC.COURSE_NO ASC;

/*==============================================================*/
/* VIEW: VCHOC_ADJUST_SELECT_STUDENT    调整学生选课 选择学生视图                         */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_ADJUST_SELECT_STUDENT
 AS 
	SELECT DISTINCT
	STU.USER_ID,
	STU.STUDENT_NO,
	STU.STUDENT_NAME,
	AR.ACADEMIC_YEAR,
	AR.SEMESTER_CODE,
	STU.GRADE,
	MA.DEPARTMENT_ID,
	TD.DEPARTMENT_NAME,
	CL.MAJOR_ID,
	MA.MAJOR_NAME,
	AR.CLASS_ID,
	CL.CLASS_NAME,
	STU.SEX_CODE,
	(
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = STU.SEX_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GB/T 2261.1-2003'
		)
	) SEX_NAME,
	RE.ACADEMIC_YEAR RE_ACADEMIC_YEAR,
	RE.SEMESTER_CODE RE_SEMESTER_CODE,
	RE.REGISTER_STATUS
FROM
	 TSTU_STUDENT STU 
JOIN TSTU_ARCHIVES_REGISTER AR ON STU.USER_ID = AR.USER_ID
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.CLASS_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID
LEFT JOIN TSYS_DEPARTMENT TD ON MA.DEPARTMENT_ID = TD.DEPARTMENT_ID -- 单位 得到开课单位
LEFT JOIN TSTU_REGISTER RE ON (
	AR.USER_ID = RE.USER_ID
	AND RE.ACADEMIC_YEAR = AR.ACADEMIC_YEAR
	AND RE.SEMESTER_CODE = AR.SEMESTER_CODE
)
ORDER BY
	STU.GRADE ASC,
	TD.DEPARTMENT_NAME DESC,
	MAJOR_NAME,
	CLASS_NAME,
	STUDENT_NO,
	STUDENT_NAME ASC;

/*==============================================================*/
/* VIEW: VCHOC_ADJUST_STUDENT_CHOICE   调整学生选课 主列表页面视图                          */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_ADJUST_STUDENT_CHOICE
AS
SELECT
	TCS.TEACHING_CLASS_STUDENT_ID,
	TCS.ACADEMIC_YEAR,
	TCS.SEMESTER_CODE,
	TT.COURSE_ID,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	TCS.THEORETICAL_TASK_ID,
	TT.TEACHING_CLASS_NO,
	TCS.USER_ID,
	TS.STUDENT_NO,
	TS.STUDENT_NAME,
	TCS.CHOICE_WAY,
	CASE CHOICE_WAY
WHEN 1 THEN
	'系统置课'
ELSE
	'学生选课'
END AS CHOICE_WAY_NAME,
 TC.CREDIT,
 TT.CHOICE_LIMIT,
 TEACHER.TEACHER_NAME TEACHER_LIST,
 CHOICED.CHOICEDNUM AS CHOICEDNUM,
 CHOICEDCOURSE.CHOICED_COURSE_COUNT,
 CHOICEDCOURSE.CHOICED_CREDIT,
 (
	SELECT
		DC.DATA_DICTIONARY_NAME
	FROM
		TSYS_DATA_DICTIONARY DC
	WHERE
		DC.CODE = TC.COURSE_TYPE_CODE
	AND DC.PARENT_ID = (
		SELECT
			DD.DATA_DICTIONARY_ID
		FROM
			TSYS_DATA_DICTIONARY DD
		WHERE
			DD.CODE = 'GTA_COURSE_CATEGORY'
	)
) || (
	SELECT
		DC.DATA_DICTIONARY_NAME
	FROM
		TSYS_DATA_DICTIONARY DC
	WHERE
		DC.CODE = TC.COURSE_ATTRIBUTE_CODE
	AND DC.PARENT_ID = (
		SELECT
			DD.DATA_DICTIONARY_ID
		FROM
			TSYS_DATA_DICTIONARY DD
		WHERE
			DD.CODE = 'GTA_COURSE_ATTRIBUTE'
	)
) AS COURSE_TYPE_NAME,
 TC.IS_CORE_CURRICULUM,
 LM.CREDIT_LIMIT,
 LM.COURSE_NUM_LIMIT
FROM
	TCHOC_TEACHING_CLASS_STUDENT TCS
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
LEFT JOIN TSTU_STUDENT TS ON TCS.USER_ID = TS.USER_ID
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = TS.CLASS_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (
			wm_concat (
				DISTINCT (
					TO_CHAR (
						CONCAT (
							CONCAT (
								'[',
								CONCAT (TT.TEACHER_NO, ']')
							),
							tt.TEACHER_NAME
						)
					)
				)
			),
			',',
			'、'
		) AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID
) TEACHER ON TT.THEORETICAL_TASK_ID = TEACHER.THEORETICAL_TASK_ID -- 教学班任课教师
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
		COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TTCS
	GROUP BY
		TTCS.THEORETICAL_TASK_ID
) CHOICED ON TT.THEORETICAL_TASK_ID = CHOICED.THEORETICAL_TASK_ID -- 教学班已选人数
LEFT JOIN (
	SELECT
		TCS.USER_ID,
		COUNT (1) CHOICED_COURSE_COUNT,
		SUM (TC.CREDIT) CHOICED_CREDIT,
		TCS.ACADEMIC_YEAR,
		TCS.SEMESTER_CODE
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TCS
	LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
	LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
	GROUP BY
		TCS.USER_ID,
		TCS.ACADEMIC_YEAR,
		TCS.SEMESTER_CODE
) CHOICEDCOURSE ON TCS.USER_ID = CHOICEDCOURSE.USER_ID
AND TCS.ACADEMIC_YEAR = CHOICEDCOURSE.ACADEMIC_YEAR
AND TCS.SEMESTER_CODE = CHOICEDCOURSE.SEMESTER_CODE
LEFT JOIN (
	SELECT
		CNL.ACADEMIC_YEAR,
		CNL.SEMESTER_CODE,
		CNL.CREDIT_LIMIT,
		CNL.COURSE_NUM_LIMIT,
		CNL.MAJOR_ID,
		CNL.GRADE
	FROM
		TCHOC_CREDIT_NUM_LIMIT CNL
	JOIN (
		SELECT
			grade,
			major_id
		FROM
			TTRAP_GRADE_MAJOR
		GROUP BY
			grade,
			major_id
	) GM ON CNL.major_id = GM.major_id
	AND CNL.GRADE = GM.GRADE
	WHERE
		CNL.COURSE_TYPE_CODE = 'TopCreditLimit'
	AND CNL.COURSE_ATTRIBUTE_CODE = 'TopNumLimit'
) LM ON MA.MAJOR_ID = LM.MAJOR_ID
AND lm.grade = TS.GRADE
AND LM.ACADEMIC_YEAR = TCS.ACADEMIC_YEAR
AND LM.SEMESTER_CODE = TCS.SEMESTER_CODE -- 专业对应的最高学分及门数上限
;

/*==============================================================*/
/* VIEW: VCHOC_ADJUST_THEORETICAL_TASK   调整学生选课 补选课程选择教学班视图                           */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_ADJUST_THEORETICAL_TASK
AS
SELECT DISTINCT
	AA.ACADEMIC_YEAR,
	--学年
	AA.SEMESTER_CODE,
	--学期
	AA.COURSE_ID,
	--课程Id
	AA.THEORETICAL_TASK_ID,
	--教学班Id
	AA.CREDIT,
	-- 学分
	AA.WEEK_LIST,
	-- 排课任务（排课周）
	AA.SECTION_LIST,
	-- 排课任务（排课节次）
	TT.TEACHING_CLASS_NO,
	--教学班人数
	TT.TEACHING_CLASS_MEMBER_COUNT,
	-- 教学班号
	NVL (TT.CHOICE_LIMIT, 0) CHOICE_LIMIT,
	--教学班可选人数上限
	TEACHER.TEACHER_NAME AS TEACHER_LIST,
	--任课老师
	NVL (CHOICED.CHOICEDNUM, 0) CHOICEDNUM,
	SP.COURSE_TYPE_CODE,
	--课程类别
	SP.COURSE_ATTRIBUTE_CODE,
	--课程属性
	SP.IS_CORE_CURRICULUM --是否通识课,
FROM
	(
		SELECT
			ST.ACADEMIC_YEAR,
			ST.SEMESTER_CODE,
			ST.COURSE_ID,
			ST.THEORETICAL_TASK_ID,
			TC.CREDIT,
			wm_concat (
				TO_CHAR (
					CONCAT (
						REPLACE (
							ST.COURSE_ARRANGE_WEEK_LIST,
							',',
							';'
						),
						''
					)
				)
			) AS WEEK_LIST,
			-- 排课周,排课周
			wm_concat (
				TO_CHAR (
					CONCAT (
						REPLACE (
							ST.COURSE_ARRANGE_SECTION,
							',',
							';'
						),
						''
					)
				)
			) AS SECTION_LIST -- 排课节次,排课节次
		FROM
			TCOUP_SCHEDULING_TASK ST -- 排课结果
		LEFT JOIN TTRAP_COURSE TC ON ST.COURSE_ID = TC.COURSE_ID -- 课程
		GROUP BY
			ST.ACADEMIC_YEAR,
			ST.SEMESTER_CODE,
			ST.COURSE_ID,
			ST.THEORETICAL_TASK_ID,
			TC.CREDIT -- 对排课结果进行分组
	) AA
JOIN TCOUP_THEORETICAL_TASK TT ON AA.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论课程-教学班
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论任务关联开课计划表
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 开课计划
LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (
			wm_concat (
				DISTINCT (
					TO_CHAR (
						CONCAT (
							CONCAT (
								'[',
								CONCAT (TT.TEACHER_NO, ']')
							),
							tt.TEACHER_NAME
						)
					)
				)
			),
			',',
			'、'
		) AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID
) TEACHER ON TT.THEORETICAL_TASK_ID = TEACHER.THEORETICAL_TASK_ID
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
		COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TTCS
	GROUP BY
		TTCS.THEORETICAL_TASK_ID
) CHOICED ON TT.THEORETICAL_TASK_ID = CHOICED.THEORETICAL_TASK_ID
ORDER BY
	TT.TEACHING_CLASS_NO ASC;


/*==============================================================*/
/* VIEW: VCHOC_CHOICE_ALIENCHANGE  处理异动学生选课结果视图                           */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CHOICE_ALIENCHANGE
AS
SELECT
	(
		AR.USER_ID || '#' || AR.ACADEMIC_YEAR || '#' || AR.SEMESTER_CODE || '#' || AR.ALIENCHANGE_CATEGORY_CODE
	) ID,
	AR.ACADEMIC_YEAR,
	AR.SEMESTER_CODE,
	AR.ALIENCHANGE_CATEGORY_CODE,
	CATEGORY_NAME AS ALIENCHANGE_CATEGORY_NAME,
	AR.USER_ID,
	STU.STUDENT_NO,
	STU.STUDENT_NAME,
	AR.AFTER_CLASS_ID AS CLASS_ID,
	CL.CLASS_NAME,
	AFTER_GRADE AS GRADE,
	AR.AFTER_DEPARTMENT_ID AS DEPARTMENT_ID,
	TD.DEPARTMENT_NAME,
	AR.AFTER_MAJOR_ID AS MAJOR_ID,
	MA.MAJOR_NAME,
	STU.SEX_CODE,
	AR.CHOICE_PROCESS_STATUS
FROM
	TSTU_ALIENCHANGE_RECORD AR
JOIN (
	SELECT
		RECORD_ID,
		ACADEMIC_YEAR,
		SEMESTER_CODE
	FROM
		(
			SELECT
				RECORD_ID,
				ACADEMIC_YEAR,
				SEMESTER_CODE,
				ALIENCHANGE_DATE,
				ROW_NUMBER () OVER (
					PARTITION BY USER_ID,
					ACADEMIC_YEAR,
					SEMESTER_CODE
				ORDER BY
					DEAL_TIME DESC
				) rn
			FROM
				TSTU_ALIENCHANGE_RECORD
			WHERE
				DEAL_STATUS = 1
		)
	WHERE
		rn = 1
) NEWRECORD ON AR.RECORD_ID = NEWRECORD.RECORD_ID -- 过滤出最新的异动记录
INNER JOIN TSTU_STUDENT STU ON AR.USER_ID = STU.USER_ID
LEFT JOIN TSTU_ARCHIVES_REGISTER RE ON (
	AR.USER_ID = RE.USER_ID
	AND RE.ACADEMIC_YEAR = AR.ACADEMIC_YEAR
	AND RE.SEMESTER_CODE = AR.SEMESTER_CODE
)
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.AFTER_CLASS_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = AR.AFTER_MAJOR_ID
LEFT JOIN TSYS_DEPARTMENT TD ON AR.AFTER_DEPARTMENT_ID = TD.DEPARTMENT_ID
LEFT JOIN TSTU_ALIENCHANGE_SETTING ST ON AR.ALIENCHANGE_CATEGORY_CODE = ST.CATEGORY_CODE
WHERE
	AR.DEAL_STATUS = 1;


/*==============================================================*/
/* VIEW: VCHOC_CHOICE_LOG     选课日志视图                         */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CHOICE_LOG
AS
SELECT
	LG.CHOICE_LOG_ID,
	LG.ACADEMIC_YEAR,
	LG.SEMESTER_CODE,
	LG.USER_ID,
	STU.STUDENT_NO,
	STU.STUDENT_NAME,
	AR.CLASS_ID,
	CL.CLASS_NAME,
	CL.GRADE,
	MA.DEPARTMENT_ID,
	TD.DEPARTMENT_NAME,
	CL.MAJOR_ID,
	MA.MAJOR_NAME,
	STU.SEX_CODE,
	LG.ROUND_ID,
	TR.ROUND_NAME,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	TT.TEACHING_CLASS_NO,
	LG.CHOICE_STATUS,
	LG.CHOICE_WAY,
	LG.CREATE_TIME,
	LG.CHOICE_IP,
	TU.USER_NAME
FROM
	TCHOC_CHOICE_LOG LG
LEFT JOIN TSTU_STUDENT STU ON LG.USER_ID = STU.USER_ID
LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON (
	AR.USER_ID = STU.USER_ID
	AND LG.ACADEMIC_YEAR = AR.ACADEMIC_YEAR
	AND LG.SEMESTER_CODE = AR.SEMESTER_CODE
)
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.CLASS_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID
LEFT JOIN TSYS_DEPARTMENT TD ON MA.DEPARTMENT_ID = TD.DEPARTMENT_ID -- 单位 得到开课单位
LEFT JOIN TCHOC_ROUND TR ON LG.ROUND_ID = TR.ROUND_ID
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TT.THEORETICAL_TASK_ID = LG.THEORETICAL_TASK_ID
LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID
LEFT JOIN TSYS_USER TU ON LG.CREATE_USER_ID = TU.USER_ID
;


/*==============================================================*/
/* VIEW: VCHOC_CHOICE_NUM_LIMIT  设置选课人数上限视图                           */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CHOICE_NUM_LIMIT
AS
SELECT DISTINCT
	ST.THEORETICAL_TASK_ID,
	ST.SCHEDULING_TASK_ID,
	ST.ACADEMIC_YEAR,
	ST.SEMESTER_CODE,
	ST.COURSE_ID,
	TC.DEPARTMENT_ID,
	TD.DEPARTMENT_NAME,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	TT.TEACHING_CLASS_NO,
	teacher.TEACHER_NAME TEACHER_LIST,
	TT.TEACHING_METHODS_CODE,
	(
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = TT.TEACHING_METHODS_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GTA_TEACHINGMODE'
		)
	) TEACHING_METHODS_NAME,
	TT.TEACHING_CLASS_MEMBER_COUNT,
	VENUE.minCapacity AS MINCAPACITY,
	TT.CHOICE_LIMIT,
	TT.ARRANGE_WEEKS,
	CHOICED.CHOICEDNUM AS CHOICEDNUM
FROM
	TCOUP_SCHEDULING_TASK ST -- 排课结果
LEFT JOIN TTRAP_COURSE TC ON ST.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
LEFT JOIN TSYS_DEPARTMENT TD ON TC.DEPARTMENT_ID = TD.DEPARTMENT_ID -- 单位 得到开课单位
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON ST.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论课程
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (
			wm_concat (
				DISTINCT (
					TO_CHAR (
						CONCAT (
							CONCAT (
								'[',
								CONCAT (TT.TEACHER_NO, ']')
							),
							tt.TEACHER_NAME
						)
					)
				)
			),
			',',
			'、'
		) AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID
) TEACHER ON TT.THEORETICAL_TASK_ID = TEACHER.THEORETICAL_TASK_ID
LEFT JOIN (
	SELECT
		TST.THEORETICAL_TASK_ID,
		MIN (TV.EFFECTIVE_SEAT_AMOUNT) AS minCapacity
	FROM
		TCOUP_SCHEDULING_TASK TST
	LEFT JOIN TSYS_VENUE TV ON TST.VENUE_ID = TV.VENUE_ID
	GROUP BY
		TST.THEORETICAL_TASK_ID
) VENUE ON ST.THEORETICAL_TASK_ID = VENUE.THEORETICAL_TASK_ID
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
		COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TTCS
	GROUP BY
		TTCS.THEORETICAL_TASK_ID
) CHOICED ON TT.THEORETICAL_TASK_ID = CHOICED.THEORETICAL_TASK_ID
;


/*==============================================================*/
/* VIEW: VCHOC_CHOICE_RESULT_MANAGE 选课结果处理视图            */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CHOICE_RESULT_MANAGE
AS
SELECT
	TT.ACADEMIC_YEAR,
	TT.SEMESTER_CODE,
	TC.DEPARTMENT_ID,
	TD.DEPARTMENT_NAME,
	TT.COURSE_ID,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	SP.COURSE_TYPE_CODE,
	SP.COURSE_ATTRIBUTE_CODE,
	TC.CREDIT,
	TT.THEORETICAL_TASK_ID,
	TT.TEACHING_CLASS_NO,
	TT.ARRANGE_WEEKS,
	teacher.TEACHER_NAME TEACHER_LIST,
	TT.TEACHING_CLASS_MEMBER_COUNT,
	TT.CHOICE_LIMIT,
	COALESCE (CHOICED.CHOICEDNUM, 0) AS CHOICEDNUM,
	TT.CHOICE_LIMIT - COALESCE (CHOICED.CHOICEDNUM, 0) AS QUOTANUM
FROM
	TCOUP_THEORETICAL_TASK TT
LEFT JOIN TCHOC_TEACHING_CLASS_STUDENT TCS ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论课程
LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
LEFT JOIN TSYS_DEPARTMENT TD ON TC.DEPARTMENT_ID = TD.DEPARTMENT_ID -- 单位 得到开课单位
JOIN TCOUP_SCHEDULING_TASK ST ON TT.THEORETICAL_TASK_ID = ST.THEORETICAL_TASK_ID -- 排课结果
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论任务关联开课计划表
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 开课计划
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (
			wm_concat (
				DISTINCT (
					TO_CHAR (
						CONCAT (
							CONCAT (
								'[',
								CONCAT (TT.TEACHER_NO, ']')
							),
							tt.TEACHER_NAME
						)
					)
				)
			),
			',',
			'、'
		) AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID
) TEACHER ON TT.THEORETICAL_TASK_ID = TEACHER.THEORETICAL_TASK_ID
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
		COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TTCS
	GROUP BY
		TTCS.THEORETICAL_TASK_ID
) CHOICED ON TT.THEORETICAL_TASK_ID = CHOICED.THEORETICAL_TASK_ID
WHERE
	TT.IS_DELETED = 0
GROUP BY
	TT.ACADEMIC_YEAR,
	TT.SEMESTER_CODE,
	TC.DEPARTMENT_ID,
	TD.DEPARTMENT_NAME,
	TT.COURSE_ID,
	TC.COURSE_NO,
	TC. NAME,
	SP.COURSE_TYPE_CODE,
	SP.COURSE_ATTRIBUTE_CODE,
	TC.CREDIT,
	TT.THEORETICAL_TASK_ID,
	TT.TEACHING_CLASS_NO,
	TT.ARRANGE_WEEKS,
	teacher.TEACHER_NAME,
	TT.TEACHING_CLASS_MEMBER_COUNT,
	TT.CHOICE_LIMIT,
	CHOICED.CHOICEDNUM
ORDER BY
	DEPARTMENT_NAME,
	TEACHING_CLASS_NO ASC;

/*==============================================================*/
/* VIEW: VCHOC_CREDIT_NUM_LIMIT  设置学分及门数上限视图    */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_CREDIT_NUM_LIMIT
AS
SELECT
	SP.STARTCLASS_PLAN_ID,
	SP.ACADEMIC_YEAR,
	SP.SEMESTER_CODE,
	GM.GRADE,
	GM.GRADE_MAJOR_ID,
	GM.MAJOR_ID,
	MA.MAJOR_NAME,
	MA.DEPARTMENT_ID,
	DT.DEPARTMENT_NAME
FROM
	TTRAP_STARTCLASS_PLAN SP
LEFT JOIN TTRAP_GRADE_MAJOR GM ON GM.GRADE_MAJOR_ID = SP.GRADE_MAJOR_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = GM.MAJOR_ID
LEFT JOIN TSYS_DEPARTMENT DT ON MA.DEPARTMENT_ID = DT.DEPARTMENT_ID
WHERE
	SP.TEMP_FLAG = 0 -- 非临时数据
AND SP.CLASS_TYPE = 1 -- 是课程
;


/*==============================================================*/
/* VIEW: VCHOC_RELATION_STUDENT_MAJOR   学生专业关系视图        */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_RELATION_STUDENT_MAJOR
AS
SELECT
	STU.USER_ID,
	CL.MAJOR_ID
FROM
	TSTU_STUDENT STU
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = STU.CLASS_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID
;
commit;


-- 教学班已选课学生-用于冲突检测-不要加额外字段
/*==============================================================*/
/* VIEW: VCHOC_TEACHING_STUDENT_SIMPLE                          */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_TEACHING_STUDENT_SIMPLE
AS
SELECT
	DISTINCT TCS.TEACHING_CLASS_STUDENT_ID,-- 已选课学生Id
    TCS.USER_ID,-- 学生Id	
	TCS.ACADEMIC_YEAR,-- 学年
	TCS.SEMESTER_CODE,-- 学期	
    TC.CREDIT,-- 学分
	SP.COURSE_TYPE_CODE,-- 课程类别
	SP.COURSE_ATTRIBUTE_CODE,--课程属性
	SP.IS_CORE_CURRICULUM,-- 是否通识课
	TCS.THEORETICAL_TASK_ID,-- 教学班Id
    TCLA.WEEK_LIST,-- 排课任务（排课周）
	TCLA.SECTION_LIST-- 排课任务（排课节次）  
FROM
	TCHOC_TEACHING_CLASS_STUDENT TCS
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 得到 教学班班号
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TCS.THEORETICAL_TASK_ID -- 关联中间表得到 开课计划Id
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 得到 通识课 考核方式 课程类型
LEFT JOIN TTRAP_COURSE TC ON SP.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称 学分 考核方式
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
			wm_concat (TO_CHAR (CONCAT (REPLACE(COURSE_ARRANGE_WEEK_LIST,',',';'),''))) AS WEEK_LIST,-- 排课周,排课周
			wm_concat (TO_CHAR (CONCAT (REPLACE(COURSE_ARRANGE_SECTION,',',';'),''))) AS SECTION_LIST -- 排课节次,排课节次
	FROM
		TCOUP_SCHEDULING_TASK
	GROUP BY
		THEORETICAL_TASK_ID -- 按教学班Id分组
) TCLA ON TCLA.THEORETICAL_TASK_ID = TCS.THEORETICAL_TASK_ID -- 得到该教学班所有排课时间
;
commit;

----------------------------------------------------------数据初始化---创建选课管理菜单-------------------------------------------------------------

-- 如果存在选课管理的菜单先删除
DELETE  TSYS_MENU t where t.PARENT_ID_LIST LIKE '%20f06840440f49909cc93ea7e11659d4%';

-- 生成选课管理菜单
DECLARE orderNo NUMBER;
BEGIN
SELECT MAX(ORDER_NO)+1 INTO orderNo FROM TSYS_MENU where PARENT_ID='0';
INSERT INTO "TSYS_MENU" VALUES ('20f06840440f49909cc93ea7e11659d4', '选课管理', 1, 'fa fa-mouse-pointer', NULL, 'ChoiceCourse', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 3, '0', '0,20f06840440f49909cc93ea7e11659d4', orderNo, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
End;
/
INSERT INTO "TSYS_MENU" VALUES ('35152e928b8d4719afb66fc1b57a42c9', '选课查询', 1, 'fa fa-table', NULL, 'ChoiceCourse_Result', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 4, '20f06840440f49909cc93ea7e11659d4', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('2b2b69da1aba4ac38d373834d2fb544a', '选课结果查询', 2, 'fa fa-laptop', 'choicecourse/result/resultsearch/html/list.html', 'ChoiceCourse_Result_ResultSearch', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 1, '35152e928b8d4719afb66fc1b57a42c9', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,2b2b69da1aba4ac38d373834d2fb544a', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('c4d7213855e14febba6abd5d4d67471c', '导出', 3, 'fa fa-th', NULL, 'ChoiceCourse_Result_ResultSearch_Export', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '2b2b69da1aba4ac38d373834d2fb544a', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,2b2b69da1aba4ac38d373834d2fb544a,2b2b69da1aba4ac38d373834d2fb544a,c4d7213855e14febba6abd5d4d67471c', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('9d1d0284479e456c85e5249d4fa0f287', '教学班花名册', 2, 'fa fa-sliders', 'choicecourse/result/teachingclass/html/list.html', 'ChoiceCourse_Result_TeachingClass', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 1, '35152e928b8d4719afb66fc1b57a42c9', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,9d1d0284479e456c85e5249d4fa0f287', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('311c445a45974bf4837ff0933f2710be', '导出', 3, 'fa fa-th', NULL, 'ChoiceCourse_Result_TeachingClass_Export', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '9d1d0284479e456c85e5249d4fa0f287', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,9d1d0284479e456c85e5249d4fa0f287,9d1d0284479e456c85e5249d4fa0f287,311c445a45974bf4837ff0933f2710be', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('c93239f8ba2e455299b2e8ad8ba3c1ab', '空余名额查询', 2, 'fa fa-desktop', 'choicecourse/result/emptysearch/html/list.html', 'ChoiceCourse_Result_EmptySearch', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 1, '35152e928b8d4719afb66fc1b57a42c9', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,c93239f8ba2e455299b2e8ad8ba3c1ab', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('39097f5b2f954acb83ceaa0a0e8ee890', '导出', 3, 'fa fa-th', NULL, 'ChoiceCourse_Result_EmptySearch_Export', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, 'c93239f8ba2e455299b2e8ad8ba3c1ab', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,c93239f8ba2e455299b2e8ad8ba3c1ab,c93239f8ba2e455299b2e8ad8ba3c1ab,39097f5b2f954acb83ceaa0a0e8ee890', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('fd0e9725651648b5af660427efa37f28', '选课日志查询', 2, 'fa fa-file-code-o', 'choicecourse/result/choicelog/html/list.html', 'ChoiceCourse_Result_ChoiceLog', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 1, '35152e928b8d4719afb66fc1b57a42c9', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,fd0e9725651648b5af660427efa37f28', 4, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('4eda30ca5aa44cf397981f99af506d1e', '导出', 3, 'fa fa-th', NULL, 'ChoiceCourse_Result_ChoiceLog_Export', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, 'fd0e9725651648b5af660427efa37f28', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,35152e928b8d4719afb66fc1b57a42c9,35152e928b8d4719afb66fc1b57a42c9,fd0e9725651648b5af660427efa37f28,fd0e9725651648b5af660427efa37f28,4eda30ca5aa44cf397981f99af506d1e', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('5df036503c3c45f7b81c501a8ee4ca69', '参数设置', 1, 'fa fa-cogs', NULL, 'ChoiceCourse_Parameter', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 5, '20f06840440f49909cc93ea7e11659d4', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('3eb857b5627a463cb924d4f50cd35e0f', '设置选课人数上限', 2, 'fa fa-level-up', 'choicecourse/parameter/choicenumlimit/html/list.html', 'ChoiceCourse_Parameter_ChoiceNumLimit', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 1, '5df036503c3c45f7b81c501a8ee4ca69', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,3eb857b5627a463cb924d4f50cd35e0f', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('4afd31b766db4357bc10ef1109050199', '批量设置', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceNumLimit_Set', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '3eb857b5627a463cb924d4f50cd35e0f', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,3eb857b5627a463cb924d4f50cd35e0f,3eb857b5627a463cb924d4f50cd35e0f,4afd31b766db4357bc10ef1109050199', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('41dc3032fec94d7abf1a5951adb9db5b', '设置选择学生', 2, 'fa fa-transgender-alt', 'choicecourse/parameter/choicestudent/html/list.html', 'ChoiceCourse_Parameter_ChoiceStudent', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 3, '5df036503c3c45f7b81c501a8ee4ca69', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,41dc3032fec94d7abf1a5951adb9db5b', 5, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('1e661444be474ca8b75fb8f25df32f44', '开放专业', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceStudent_Add', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '41dc3032fec94d7abf1a5951adb9db5b', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,41dc3032fec94d7abf1a5951adb9db5b,41dc3032fec94d7abf1a5951adb9db5b,1e661444be474ca8b75fb8f25df32f44', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('77e3668d248c47b596f3507c35234823', '设置禁选学生', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceStudent_Set', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '41dc3032fec94d7abf1a5951adb9db5b', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,41dc3032fec94d7abf1a5951adb9db5b,41dc3032fec94d7abf1a5951adb9db5b,77e3668d248c47b596f3507c35234823', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('88e16e42bf0b4b968e8ab33ac71ef3d1', '移除专业', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceStudent_Delete', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '41dc3032fec94d7abf1a5951adb9db5b', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,41dc3032fec94d7abf1a5951adb9db5b,41dc3032fec94d7abf1a5951adb9db5b,88e16e42bf0b4b968e8ab33ac71ef3d1', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('7a2ff04ed0c24050a1dd03d6470a06df', '设置选择课程', 2, 'fa fa-database', 'choicecourse/parameter/choicecourse/html/list.html', 'ChoiceCourse_Parameter_ChoiceCourse', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 2, '5df036503c3c45f7b81c501a8ee4ca69', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,7a2ff04ed0c24050a1dd03d6470a06df', 4, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('b8324c5b14ff4ff2bb059c28b3a8a679', '选择课程', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceCourse_Add', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '7a2ff04ed0c24050a1dd03d6470a06df', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,7a2ff04ed0c24050a1dd03d6470a06df,7a2ff04ed0c24050a1dd03d6470a06df,b8324c5b14ff4ff2bb059c28b3a8a679', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('dec00f6288f54165bac8a55fe74ff819', '移除课程', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceCourse_Delete', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '7a2ff04ed0c24050a1dd03d6470a06df', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,7a2ff04ed0c24050a1dd03d6470a06df,7a2ff04ed0c24050a1dd03d6470a06df,dec00f6288f54165bac8a55fe74ff819', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('816f4aaaa268404581491599299b46a3', '设置选课轮次', 2, 'fa fa-object-group', 'choicecourse/parameter/choiceround/html/list.html', 'ChoiceCourse_Parameter_ChoiceRound', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 3, '5df036503c3c45f7b81c501a8ee4ca69', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,816f4aaaa268404581491599299b46a3', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('24666ab3ea0f4f2181c530a3b9a03bd5', '删除', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceRound_Delete', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '816f4aaaa268404581491599299b46a3', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,816f4aaaa268404581491599299b46a3,816f4aaaa268404581491599299b46a3,24666ab3ea0f4f2181c530a3b9a03bd5', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('382747a74a07430d9956e19c679c52d7', '修改', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceRound_Update', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '816f4aaaa268404581491599299b46a3', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,816f4aaaa268404581491599299b46a3,816f4aaaa268404581491599299b46a3,382747a74a07430d9956e19c679c52d7', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('bc8c3f08fba64fc7a111c7ea52adad9b', '新增', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_ChoiceRound_Add', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '816f4aaaa268404581491599299b46a3', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,816f4aaaa268404581491599299b46a3,816f4aaaa268404581491599299b46a3,bc8c3f08fba64fc7a111c7ea52adad9b', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('89ef492e37d9420abc1b8991fd5b5ee2', '设置学分及门数上限', 2, 'fa fa-tachometer', 'choicecourse/parameter/creditandnumlimit/html/list.html', 'ChoiceCourse_Parameter_CreditAndNumLimit', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 1, '5df036503c3c45f7b81c501a8ee4ca69', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,89ef492e37d9420abc1b8991fd5b5ee2', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('a7e1b83af7544dd394045f066fdc0324', '批量设置', 3, 'fa fa-th', NULL, 'ChoiceCourse_Parameter_CreditAndNumLimit_Set', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '89ef492e37d9420abc1b8991fd5b5ee2', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,5df036503c3c45f7b81c501a8ee4ca69,5df036503c3c45f7b81c501a8ee4ca69,89ef492e37d9420abc1b8991fd5b5ee2,89ef492e37d9420abc1b8991fd5b5ee2,a7e1b83af7544dd394045f066fdc0324', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('ef1cc6be71aa47129047728d3cb6ccad', '选课处理', 1, 'fa fa-paint-brush', NULL, 'ChoiceCourse_Manage', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 4, '20f06840440f49909cc93ea7e11659d4', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('07ba1349fba24e14a645d2f527ca3005', '处理选课结果', 2, 'fa fa-pencil-square', 'choicecourse/manage/manageresult/html/list.html', 'ChoiceCourse_Manage_ManageResult', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 3, 'ef1cc6be71aa47129047728d3cb6ccad', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,07ba1349fba24e14a645d2f527ca3005', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('023fca628dff42c283a9b8f2ee8fe8b7', '删除教学班', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_ManageResult_Delete', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '07ba1349fba24e14a645d2f527ca3005', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,07ba1349fba24e14a645d2f527ca3005,07ba1349fba24e14a645d2f527ca3005,023fca628dff42c283a9b8f2ee8fe8b7', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('6f52f51ed54f496d9668b32f97bd9c03', '调剂', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_ManageResult_Update', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '07ba1349fba24e14a645d2f527ca3005', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,07ba1349fba24e14a645d2f527ca3005,07ba1349fba24e14a645d2f527ca3005,6f52f51ed54f496d9668b32f97bd9c03', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('7e71fa667812414eb47f50375da90bc1', '退选', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_ManageResult_Exit', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '07ba1349fba24e14a645d2f527ca3005', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,07ba1349fba24e14a645d2f527ca3005,07ba1349fba24e14a645d2f527ca3005,7e71fa667812414eb47f50375da90bc1', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('248cea36a31b41e18757f9b770000159', '批量选课', 2, 'fa fa-braille', 'choicecourse/manage/batchchoice/html/list.html', 'ChoiceCourse_Manage_BatchChoice', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 2, 'ef1cc6be71aa47129047728d3cb6ccad', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,248cea36a31b41e18757f9b770000159', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('15b56f142eea4ea6af30e782116c7fc8', '批量选课', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_BatchChoice_Add', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '248cea36a31b41e18757f9b770000159', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,248cea36a31b41e18757f9b770000159,248cea36a31b41e18757f9b770000159,15b56f142eea4ea6af30e782116c7fc8', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('d733cd0079cf4f9495ea79f915b51bfb', '调整选课', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_BatchChoice_Update', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '248cea36a31b41e18757f9b770000159', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,248cea36a31b41e18757f9b770000159,248cea36a31b41e18757f9b770000159,d733cd0079cf4f9495ea79f915b51bfb', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('2816a5eac57142ffadc30240f2774593', '按学生调整选课', 2, 'fa fa-puzzle-piece', 'choicecourse/manage/adjustchoice/html/list.html', 'ChoiceCourse_Manage_AdjustChoice', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 2, 'ef1cc6be71aa47129047728d3cb6ccad', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,2816a5eac57142ffadc30240f2774593', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('4c857bd522ff45e1adc186f11fbf9aa7', '补选课程', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_AdjustChoice_Add', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '2816a5eac57142ffadc30240f2774593', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,2816a5eac57142ffadc30240f2774593,2816a5eac57142ffadc30240f2774593,4c857bd522ff45e1adc186f11fbf9aa7', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('89f664fcd3db4187967143d2f93da539', '退选', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_AdjustChoice_Delete', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '2816a5eac57142ffadc30240f2774593', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,2816a5eac57142ffadc30240f2774593,2816a5eac57142ffadc30240f2774593,89f664fcd3db4187967143d2f93da539', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('5724b3f911714fcb8ec6cbac2c8d9059', '处理异动学生选课结果', 2, 'fa fa-share-square', 'choicecourse/manage/alienchange/html/list.html', 'ChoiceCourse_Manage_AlienChange', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 2, 'ef1cc6be71aa47129047728d3cb6ccad', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,5724b3f911714fcb8ec6cbac2c8d9059', 4, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('bb5b5f7a691a4da09c24de5d1cee8e44', '补选选课', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_AlienChange_Add', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '5724b3f911714fcb8ec6cbac2c8d9059', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,5724b3f911714fcb8ec6cbac2c8d9059,5724b3f911714fcb8ec6cbac2c8d9059,bb5b5f7a691a4da09c24de5d1cee8e44', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);
INSERT INTO "TSYS_MENU" VALUES ('cd5b023f509e42d3b228415de6a53419', '取消选课', 3, 'fa fa-th', NULL, 'ChoiceCourse_Manage_AlienChange_Delete', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', NULL, 1, NULL, 0, '5724b3f911714fcb8ec6cbac2c8d9059', '0,20f06840440f49909cc93ea7e11659d4,20f06840440f49909cc93ea7e11659d4,ef1cc6be71aa47129047728d3cb6ccad,ef1cc6be71aa47129047728d3cb6ccad,5724b3f911714fcb8ec6cbac2c8d9059,5724b3f911714fcb8ec6cbac2c8d9059,cd5b023f509e42d3b228415de6a53419', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE, '1b7ade75be4e4ba8b7fe94fa06e36e92', SYSDATE);

commit;

-- 给教务管理员授权
delete from TSYS_ROLE_MENU_PERMISSION WHERE ROLE_ID = '2' AND MENU_ID IN (select MENU_ID from tsys_menu where parent_id_list like '%,20f06840440f49909cc93ea7e11659d4%');

INSERT INTO TSYS_ROLE_MENU_PERMISSION select SYS_GUID(),'2',MENU_ID from tsys_menu where parent_id_list like '%,20f06840440f49909cc93ea7e11659d4%';

commit;