
/*
 学生服务--数据初始化
*/
/*
 学生服务--删除原有菜单
*/ 
delete  TSYS_MENU t where t.MENU_ID in 
(
select menu_id from tsys_menu where parent_id_list like '%,f32b99b8e1c342b688dff44f44590830%'
) ;

-- 生成学生服务菜单
insert into tsys_menu values ('f32b99b8e1c342b688dff44f44590830', '学生服务', 1, 'fa fa-child', '', 'StudentService', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 1, '0', '0,f32b99b8e1c342b688dff44f44590830', 11, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('497974573a9743fc91fa1cf385a8bb6d', '学籍档案', 1, 'fa fa-credit-card', '', 'StudentService_StudentArchives', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 1, 'f32b99b8e1c342b688dff44f44590830', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('475c2e51ef6f41bba4ed3a6515af26f1', '选课中心', 1, 'fa fa-mouse-pointer', '', 'StudentService_ChoiceCourseCenter', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 2, 'f32b99b8e1c342b688dff44f44590830', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,475c2e51ef6f41bba4ed3a6515af26f1', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('6a170132c9314d71ae91163714eff354', '教学安排', 1, 'fa fa-th', '', 'StudentService_TeachingArrangement', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 2, 'f32b99b8e1c342b688dff44f44590830', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,6a170132c9314d71ae91163714eff354', 4, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('b4d8aa086aac42e2bc9c15dcb1620840', '培养方案', 2, 'fa fa-file-text', 'studentservice/trainPlan/html/list.html', 'StudentService_TrainPlan', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, 'f32b99b8e1c342b688dff44f44590830', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,b4d8aa086aac42e2bc9c15dcb1620840', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('65097903466244dfad42b76d149bbb41', '成绩查询', 2, 'fa fa-list', 'studentservice/score/html/list.html', 'StudentService_StudentScore', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 1, 'f32b99b8e1c342b688dff44f44590830', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,65097903466244dfad42b76d149bbb41', 5, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('90d371a51cda4bcfad17d689a2633c35', '基本信息', 2, 'fa fa-address-card', 'studentservice/studentArchives/html/info.html', 'StudentService_StudentArchives_Information', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 1, '497974573a9743fc91fa1cf385a8bb6d', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d,497974573a9743fc91fa1cf385a8bb6d,90d371a51cda4bcfad17d689a2633c35', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('3b4880073d504e8d919cac982eab69ef', '学籍异动申请', 2, 'fa fa-magnet', 'studentservice/studentArchives/html/list.html', 'StudentService_StudentArchives_AlienChange', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 3, '497974573a9743fc91fa1cf385a8bb6d', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d,497974573a9743fc91fa1cf385a8bb6d,3b4880073d504e8d919cac982eab69ef', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('94fb4fddb652455b858c86343e64c0cb', '调停课信息', 2, 'fa fa-retweet', 'studentservice/teachingSchedule/html/transferInformation.html', 'StudentService_TeachingArrangement_LessonDispose', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '6a170132c9314d71ae91163714eff354', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,6a170132c9314d71ae91163714eff354,6a170132c9314d71ae91163714eff354,94fb4fddb652455b858c86343e64c0cb', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('8f9772cac64b408693866508c6c81c76', '个人课表', 2, 'fa fa-leanpub', 'studentservice/teachingSchedule/html/personalTimetable.html', 'StudentService_TeachingArrangement_PersonalSchedule', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 1, '6a170132c9314d71ae91163714eff354', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,6a170132c9314d71ae91163714eff354,6a170132c9314d71ae91163714eff354,8f9772cac64b408693866508c6c81c76', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('579d75e3fa384382a3568dd38fcf7395', '选课中心', 2, 'fa fa-rocket', 'studentservice/choiceCourse/html/choiceCenterList.html', 'StudentService_ChoiceCourseCenter_ChoiceCourseCenter', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 1, '475c2e51ef6f41bba4ed3a6515af26f1', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,475c2e51ef6f41bba4ed3a6515af26f1,475c2e51ef6f41bba4ed3a6515af26f1,579d75e3fa384382a3568dd38fcf7395', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('80a4b23e12684c5795076a7ead4daa8d', '选课结果及退选', 2, 'fa fa-reply-all', 'studentservice/choiceCourse/html/choiceResultList.html', 'StudentService_ChoiceCourseCenter_ChoiceCourseResult', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 1, '475c2e51ef6f41bba4ed3a6515af26f1', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,475c2e51ef6f41bba4ed3a6515af26f1,475c2e51ef6f41bba4ed3a6515af26f1,80a4b23e12684c5795076a7ead4daa8d', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('ab2d4690db6c4e84a4db798123d886d0', '导出', 3, 'fa fa-th', '', 'StudentService_StudentScore_Export', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '65097903466244dfad42b76d149bbb41', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,65097903466244dfad42b76d149bbb41,65097903466244dfad42b76d149bbb41,ab2d4690db6c4e84a4db798123d886d0', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('4148201f7d3243759a75321b752df67a', '异动申请', 3, 'fa fa-th', '', 'StudentService_StudentArchives_AlienChange_Add', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '3b4880073d504e8d919cac982eab69ef', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d,497974573a9743fc91fa1cf385a8bb6d,3b4880073d504e8d919cac982eab69ef,3b4880073d504e8d919cac982eab69ef,4148201f7d3243759a75321b752df67a', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('573d825f7ef045978d19cb3a496929db', '异动信息查看', 3, 'fa fa-th', '', 'StudentService_StudentArchives_AlienChange_View', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '3b4880073d504e8d919cac982eab69ef', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d,497974573a9743fc91fa1cf385a8bb6d,3b4880073d504e8d919cac982eab69ef,3b4880073d504e8d919cac982eab69ef,573d825f7ef045978d19cb3a496929db', 3, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('80f6ca5005884c529655e0b4b87b566c', '删除', 3, 'fa fa-th', '', 'StudentService_StudentArchives_AlienChange_Delete', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '3b4880073d504e8d919cac982eab69ef', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d,497974573a9743fc91fa1cf385a8bb6d,3b4880073d504e8d919cac982eab69ef,3b4880073d504e8d919cac982eab69ef,80f6ca5005884c529655e0b4b87b566c', 4, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('248c2f0b44fd46c793701605417a18f6', '异动信息修改', 3, 'fa fa-th', '', 'StudentService_StudentArchives_AlienChange_Update', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '3b4880073d504e8d919cac982eab69ef', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d,497974573a9743fc91fa1cf385a8bb6d,3b4880073d504e8d919cac982eab69ef,3b4880073d504e8d919cac982eab69ef,248c2f0b44fd46c793701605417a18f6', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('b489bfda156e4328802c1bc52f11724e', '修改', 3, 'fa fa-th', '', 'StudentService_StudentArchives_Information_Update', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '90d371a51cda4bcfad17d689a2633c35', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,497974573a9743fc91fa1cf385a8bb6d,497974573a9743fc91fa1cf385a8bb6d,90d371a51cda4bcfad17d689a2633c35,90d371a51cda4bcfad17d689a2633c35,b10c8cacf84c462e876af74615bb2924', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('670c396f841c428193ecd00ad7378100', '选课课表', 3, 'fa fa-th', '', 'StudentService_ChoiceCourseCenter_ChoiceStudentSchedule', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '80a4b23e12684c5795076a7ead4daa8d', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,475c2e51ef6f41bba4ed3a6515af26f1,475c2e51ef6f41bba4ed3a6515af26f1,80a4b23e12684c5795076a7ead4daa8d,80a4b23e12684c5795076a7ead4daa8d,670c396f841c428193ecd00ad7378100', 2, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('7449fed23ae3445bad7d34bf555e2abd', '打印', 3, 'fa fa-th', '', 'StudentService_TeachingArrangement_PersonalSchedule_Print', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '8f9772cac64b408693866508c6c81c76', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,6a170132c9314d71ae91163714eff354,6a170132c9314d71ae91163714eff354,8f9772cac64b408693866508c6c81c76,8f9772cac64b408693866508c6c81c76,7449fed23ae3445bad7d34bf555e2abd', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('1704a83087bd43ed9a17c249347ca0b1', '退选', 3, 'fa fa-th', '', 'StudentService_ChoiceCourseCenter_ChoiceCourseResult_Abandon', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '80a4b23e12684c5795076a7ead4daa8d', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,475c2e51ef6f41bba4ed3a6515af26f1,475c2e51ef6f41bba4ed3a6515af26f1,80a4b23e12684c5795076a7ead4daa8d,80a4b23e12684c5795076a7ead4daa8d,1704a83087bd43ed9a17c249347ca0b1', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);
insert into tsys_menu values ('c7e732cd9b3e42208407a3f74715917f', '选课', 3, 'fa fa-th', '', 'StudentService_ChoiceCourseCenter_ChoiceCourseCenter_ChoiceCourse', 1, 2, 0, 1, 'feed58284f9e48988ec463d5aa3eb92a', '', 1, '', 0, '579d75e3fa384382a3568dd38fcf7395', '0,f32b99b8e1c342b688dff44f44590830,f32b99b8e1c342b688dff44f44590830,475c2e51ef6f41bba4ed3a6515af26f1,475c2e51ef6f41bba4ed3a6515af26f1,579d75e3fa384382a3568dd38fcf7395,579d75e3fa384382a3568dd38fcf7395,c7e732cd9b3e42208407a3f74715917f', 1, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate, '1b7ade75be4e4ba8b7fe94fa06e36e92', sysdate);

commit;

/*
 学生服务--删除教务系统管理员角色原有的菜单权限
*/ 
delete from TSYS_ROLE_MENU_PERMISSION WHERE ROLE_ID = '2' AND MENU_ID IN (select MENU_ID from tsys_menu where parent_id_list like '%,f32b99b8e1c342b688dff44f44590830%');
commit;

/*
 学生服务--给教务系统管理员角色授予菜单权限
*/ 
insert into TSYS_ROLE_MENU_PERMISSION  select SYS_GUID(),'2',MENU_ID from tsys_menu where parent_id_list like '%,f32b99b8e1c342b688dff44f44590830%';
commit;

/*
 学生服务--删除学生角色原有的菜单权限
*/ 
delete from TSYS_ROLE_MENU_PERMISSION WHERE ROLE_ID = '4' AND MENU_ID IN (select MENU_ID from tsys_menu where parent_id_list like '%,f32b99b8e1c342b688dff44f44590830%');
commit;

/*
 学生服务--给学生角色授予菜单权限
*/ 
insert into TSYS_ROLE_MENU_PERMISSION  select SYS_GUID(),'4',MENU_ID from tsys_menu where parent_id_list like '%,f32b99b8e1c342b688dff44f44590830%';
commit;

-- 初始化学生修改个人信息控制
DELETE  tstu_student_setting_fields t where t.field_id in ('a25312beaae44c109a4b2dfcb6ea1448','d8678c6093dd46048ee1a1d43c0499fa','f06d572dfa5c40e4a2c66ef55f359e00','1a0499a4804f426982f7bbf34ad96bb4');
INSERT INTO tstu_student_setting_fields values('a25312beaae44c109a4b2dfcb6ea1448','6855b596c08e4013871496fa448cfe1e','BIRTH_CITY_CODE','出生地行政区划（市）',1,0);
INSERT INTO tstu_student_setting_fields values('d8678c6093dd46048ee1a1d43c0499fa','6855b596c08e4013871496fa448cfe1e','BIRTH_AREA_CODE','出生地行政区划（区）',1,0);
INSERT INTO tstu_student_setting_fields values('f06d572dfa5c40e4a2c66ef55f359e00','6855b596c08e4013871496fa448cfe1e','FROM_CITY_CODE','生源地区行政区划（市）',1,0);
INSERT INTO tstu_student_setting_fields values('1a0499a4804f426982f7bbf34ad96bb4','6855b596c08e4013871496fa448cfe1e','FROM_AREA_CODE','生源地区行政区划（区）',1,0);

commit;

-- 1学生服务--获取学生选课结果 
/*==============================================================*/
/* VIEW: VCHOC_STUS_CHOICE_RESULT                               */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_CHOICE_RESULT
AS
SELECT
    DISTINCT TCS.TEACHING_CLASS_STUDENT_ID,-- 已选课学生Id
	  TCS.ACADEMIC_YEAR,-- 学年
	  TCS.SEMESTER_CODE,-- 学期    
    TCS.USER_ID,-- 学生Id    
	  TT.COURSE_ID,-- 课程Id
    TC.COURSE_NO, -- 课程号
	  TC.NAME AS COURSE_NAME, --课程名称
    TC.CREDIT,-- 学分  
    SP.TOTAL_PERIOD, --总学时  	
	  SP.COURSE_TYPE_CODE,-- 课程类别
	  SP.COURSE_ATTRIBUTE_CODE,--课程属性
    TCS.THEORETICAL_TASK_ID,-- 教学班Id
	  TT.TEACHING_CLASS_NO,-- 教学班号
    TCLA.TASK_COUNT, -- 排课任务数	
    TCLA.WEEK_LIST,-- 周次    
	  TCLA.SECTION_LIST, -- 星期节次
    TCLA.SINGLE_DOUBLE_LIST, -- 是否单双周
	  TCLA.CAMPUS_LIST, -- 校区
    TCLA.BUILDING_LIST, -- 楼房
    TCLA.VENUE_LIST, -- 场地
    TEA.TEACHER_NAME TEACHER_LIST,-- 任课教师
    TT.CHOICE_LIMIT, -- 可选人数上限
	  NVL (CHOICED.CHOICEDNUM, 0) CHOICEDNUM,	--已选人数
    TCS.CHOICE_WAY,-- 选课方式 1系统置课不能退
    TCS.ROUND_ID, --轮次Id
    RO.IS_OPENED,--开放选课:1是 0否	
    RO.EXIT_CONTROL,-- 选课退选控制:1 可选可退 2 只可选课 3 只可退课
    RO.START_TIME,-- 选课开始时间	     
	  RO.END_TIME-- 选课结束时间	  
FROM
	TCHOC_TEACHING_CLASS_STUDENT TCS
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 得到 教学班班号
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TCS.THEORETICAL_TASK_ID -- 关联中间表得到 开课计划Id
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 得到 通识课 考核方式 课程类型
LEFT JOIN TTRAP_COURSE TC ON SP.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称 学分 考核方式
LEFT JOIN (
	 SELECT
		 TTT.THEORETICAL_TASK_ID,
		 REPLACE (wm_concat (TO_CHAR (tt.TEACHER_NAME)),',','、') AS TEACHER_NAME
	 FROM
		 TCOUP_THEORETICAL_TEACHERS TTT
	 LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	 GROUP BY
	   TTT.THEORETICAL_TASK_ID -- 按教学班Id分组 得到任课老师组合
) TEA ON TCS.THEORETICAL_TASK_ID = TEA.THEORETICAL_TASK_ID
LEFT JOIN (
	 SELECT
		   THEORETICAL_TASK_ID,
       COUNT(0) AS TASK_COUNT,
			 wm_concat (TO_CHAR (CONCAT (REPLACE(COURSE_ARRANGE_WEEKLY,',',';'),''))) AS WEEK_LIST,-- 周次     
			 wm_concat (TO_CHAR (CONCAT (REPLACE(COURSE_ARRANGE_SECTION,',',';'),''))) AS SECTION_LIST, -- 星期节次
       wm_concat (TO_CHAR (CONCAT (SINGLE_OR_DOUBLE_WEEK,''))) AS SINGLE_DOUBLE_LIST, -- 是否单双周
       wm_concat (TO_CHAR (CONCAT (NVL(CA.CAMPUS_NAME, '0'),''))) AS CAMPUS_LIST, -- 校区:NULL时 以0代替
       wm_concat (TO_CHAR (CONCAT (NVL(BU.BUILDING_NAME, '0'),''))) AS BUILDING_LIST, -- 楼房:NULL时 以0代替
       wm_concat (TO_CHAR (CONCAT (NVL(VE.VENUE_NAME, '0'),''))) AS VENUE_LIST -- 场地:NULL时 以0代替
	 FROM TCOUP_SCHEDULING_TASK TASK 
   LEFT JOIN TSYS_CAMPUS CA ON TASK.CAMPUS_ID =CA.CAMPUS_ID
   LEFT JOIN TSYS_BUILDING BU ON TASK.BUILDING_ID =BU.BUILDING_ID 
   LEFT JOIN TSYS_VENUE VE ON TASK.VENUE_ID =VE.VENUE_ID 
	 GROUP BY THEORETICAL_TASK_ID -- 按教学班Id分组
) TCLA ON TCLA.THEORETICAL_TASK_ID = TCS.THEORETICAL_TASK_ID -- 得到该教学班所有排课时间
LEFT JOIN (
	SELECT
     ACADEMIC_YEAR,
		 SEMESTER_CODE,
		 THEORETICAL_TASK_ID,
		 COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT
	GROUP BY
    ACADEMIC_YEAR,
		SEMESTER_CODE,
		THEORETICAL_TASK_ID -- 按教学班Id分组
) CHOICED ON (TCS.THEORETICAL_TASK_ID = CHOICED.THEORETICAL_TASK_ID AND CHOICED.ACADEMIC_YEAR = TCS.ACADEMIC_YEAR AND CHOICED.SEMESTER_CODE = TCS.SEMESTER_CODE)-- 得到 已选人数
LEFT JOIN TCHOC_ROUND RO ON RO.ROUND_ID=TCS.ROUND_ID
;
COMMIT;


-- 学生服务--教学班可选人数上限和已选人数 
/*==============================================================*/
/* VIEW: VCHOC_STUS_THEORETICAL_LIMIT                               */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_THEORETICAL_LIMIT
AS
SELECT
	TT.ACADEMIC_YEAR,
	TT.SEMESTER_CODE,
	TT.THEORETICAL_TASK_ID,
	TT.CHOICE_LIMIT,-- 可选人数上限
	NVL (CHOICED.CHOICEDNUM, 0) CHOICEDNUM	--已选人数 
FROM
	TCOUP_THEORETICAL_TASK TT
LEFT JOIN (
	SELECT
		ACADEMIC_YEAR,
		SEMESTER_CODE,
		THEORETICAL_TASK_ID,
		COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT
	GROUP BY
		ACADEMIC_YEAR,
		SEMESTER_CODE,
		THEORETICAL_TASK_ID -- 按教学班Id分组
) CHOICED ON (
	CHOICED.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
	AND CHOICED.ACADEMIC_YEAR = TT.ACADEMIC_YEAR
	AND CHOICED.SEMESTER_CODE = TT.SEMESTER_CODE
) -- 得到 已选人数
;
COMMIT;

/*==============================================================*/
/* VIEW: VCHOC_STUS_CHOICE_ROUND  选课中心-选课轮次视图         */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_CHOICE_ROUND
AS
SELECT
	TR.ROUND_ID,
	-- 轮次ID
	TR.ACADEMIC_YEAR,
	--学年
	TR.SEMESTER_CODE,
	--学期
	TR.ROUND_NAME,
	-- 选课轮次
	TR.START_TIME,
	-- 选课开始时间
	TR.END_TIME,
	-- 选课结束时间
	TR.EXIT_CONTROL,
	-- 选课退选控制:1 可选可退 2 只可选课 3 只可退课
	TR.IS_AT_SCHOOL,
	--要求学生在校:1是 0否
	TR.IS_ARCHIVE,
	--要求学生在籍:1是 0否
	TR.IS_REGISTER,
	--要求学生注册:1是 0否
	TR.IS_TRANS_CAMPUS,
	--允许跨校区选课
	TR.IS_OPENED,
	--是否开放
	CS.USER_ID,
	--学生Id
	CS.STUDENT_NO,
	--学生编号
	CS.STUDENT_NAME,
	--学生名称
	NVL (CS.REGISTER_STATUS, 0) AS REGISTER_STATUS,
	--注册状态
	CS.SCHOOL_STATUS_CODE,
	--在校状态
	CS.ARCHIEVES_STATUS_CODE,
	--学籍状态
	CS.USERNUM,
	--学生禁选状态 1 禁选 0 未禁选
	CS.GRADE,
	-- 年级
	CS.MAJOR_ID,
	--专业
	CS.CLASS_ID,
	--班级ID
	CS.CAMPUS_ID
FROM
	TCHOC_ROUND TR
JOIN (
	SELECT
		CM.ROUND_ID,
		STU.USER_ID,
		STU.STUDENT_NAME,
		STU.STUDENT_NO,
		STU.GRADE,
		AR.CLASS_ID,
		CL.MAJOR_ID,
		CA.CAMPUS_ID,
		RE.REGISTER_STATUS,
		AR.SCHOOL_STATUS_CODE,
		AR.ARCHIEVES_STATUS_CODE,
		(
			SELECT
				COUNT (BANNED_STUDENT_ID)
			FROM
				TCHOC_BANNED_STUDENT BA
			WHERE
				BA.USER_ID = STU.USER_ID
			AND BA.CHOICE_MAJOR_ID = CM.CHOICE_MAJOR_ID
		) USERNUM -- 当前学生Id是否已禁选，1表示禁选，0表示没有
	FROM
		TSTU_STUDENT STU
	LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON AR.USER_ID = STU.USER_ID
	LEFT JOIN TSTU_REGISTER RE ON (
		RE.USER_ID = STU.USER_ID
		AND RE.ACADEMIC_YEAR = AR.ACADEMIC_YEAR
		AND RE.SEMESTER_CODE = AR.SEMESTER_CODE
	)
	LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = AR.CLASS_ID
	LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID
	LEFT JOIN TSYS_CAMPUS CA ON CL.CAMPUS_ID = CA.CAMPUS_ID
	LEFT JOIN TCHOC_CHOICE_MAJOR CM ON (
		CL.MAJOR_ID = CM.MAJOR_ID
		AND CL.GRADE = CM.GRADE
		AND AR.ACADEMIC_YEAR = CM.ACADEMIC_YEAR
		AND AR.SEMESTER_CODE = CM.SEMESTER_CODE
	)
) CS ON TR.ROUND_ID = CS.ROUND_ID
LEFT JOIN TSYS_CAMPUS CA ON CS.CAMPUS_ID = CA.CAMPUS_ID
;
COMMIT;

/*==============================================================*/
/* VIEW: VCHOC_STUS_CHOICE_MAININFO  选课中心-选课信息统计视图        */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_CHOICE_MAININFO
AS 
SELECT
	TS.USER_ID,
	--学生ID
	NVL (
		LM.ACADEMIC_YEAR,
		CHOICED.ACADEMIC_YEAR
	) AS ACADEMIC_YEAR,
	--学年
	NVL (
		LM.SEMESTER_CODE,
		CHOICED.SEMESTER_CODE
	) AS SEMESTER_CODE,
	--学期
	NVL (CHOICED.CHOICED_CREDIT, 0) AS CHOICED_CREDIT,
	--已选课程学分
	NVL (CHOICED.CHOICED_NUM, 0) CHOICED_NUM,
	--已选课程门数 
	LM.ROUND_NAME,
	-- 轮次
	LM.CREDIT_LIMIT AS CREDIT_LIMIT,
	--专业最高学分
	LM.COURSE_NUM_LIMIT AS NUM_LIMIT --专业最高门数上限
FROM
	TSTU_STUDENT TS
LEFT JOIN (
	SELECT
		TCS.USER_ID,
		TCS.ACADEMIC_YEAR,
		TCS.SEMESTER_CODE,
		SUM (CREDIT) CHOICED_CREDIT,
		COUNT (1) AS CHOICED_NUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TCS
	JOIN (
		SELECT
			ACADEMIC_YEAR,
			SEMESTER_CODE,
			ROUND_NAME
		FROM
			TCHOC_ROUND
		WHERE
			IS_OPENED = 1
		AND ROWNUM = 1
	) RN ON TCS.ACADEMIC_YEAR = RN.ACADEMIC_YEAR
	AND TCS.SEMESTER_CODE = RN.SEMESTER_CODE
	LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
	LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称 学分 考核方式
	GROUP BY
		TCS.USER_ID,
		TCS.ACADEMIC_YEAR,
		TCS.SEMESTER_CODE
) CHOICED ON TS.USER_ID = CHOICED.USER_ID
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = TS.CLASS_ID
LEFT JOIN (
	SELECT
		CNL.ACADEMIC_YEAR,
		CNL.SEMESTER_CODE,
		CNL.CREDIT_LIMIT,
		CNL.COURSE_NUM_LIMIT,
		CNL.MAJOR_ID,
		CNL.GRADE,
		ROUND_NAME
	FROM
		TCHOC_CREDIT_NUM_LIMIT CNL
	JOIN (
		SELECT
			GRADE,
			MAJOR_ID
		FROM
			TTRAP_GRADE_MAJOR
		GROUP BY
			GRADE,
			MAJOR_ID
	) GM ON CNL.MAJOR_ID = GM.MAJOR_ID
	AND CNL.GRADE = GM.GRADE
	JOIN (
		SELECT
			ACADEMIC_YEAR,
			SEMESTER_CODE,
			ROUND_NAME
		FROM
			TCHOC_ROUND
		WHERE
			IS_OPENED = 1
		AND ROWNUM = 1
	) RN ON CNL.ACADEMIC_YEAR = RN.ACADEMIC_YEAR
	AND CNL.SEMESTER_CODE = RN.SEMESTER_CODE
	WHERE
		CNL.COURSE_TYPE_CODE = 'TopCreditLimit'
	AND CNL.COURSE_ATTRIBUTE_CODE = 'TopNumLimit'
) LM ON LM.MAJOR_ID = CL.MAJOR_ID
AND LM.GRADE = TS.GRADE
;
COMMIT;

/*==============================================================*/
/* VIEW: VCHOC_STUS_CHOICE_COURSE 选课轮次课程信息				        */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_CHOICE_COURSE
 AS
SELECT DISTINCT
	CC.COURSE_ID,
	CC.ROUND_ID,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	TC.CREDIT,
	TC.TOTAL_PERIOD,
	SP.COURSE_TYPE_CODE,
	(
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = SP.COURSE_TYPE_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GTA_COURSE_CATEGORY'
		)
	) || (
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = SP.COURSE_ATTRIBUTE_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GTA_COURSE_ATTRIBUTE'
		)
	) AS COURSE_TYPE_NAME,
	SP.CHECK_WAY_CODE,
	NULL AS CHOICE_WAY,
	THC.CLASS_ID
FROM
	TCHOC_CHOICE_COURSE CC
JOIN TCHOC_ROUND TR ON CC.ROUND_ID = TR.ROUND_ID
LEFT JOIN TTRAP_COURSE TC ON CC.COURSE_ID = TC.COURSE_ID
LEFT JOIN TCOUP_SCHEDULING_TASK ST ON ST.COURSE_ID = TC.COURSE_ID
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON ST.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论课程
LEFT JOIN TCOUP_THEORETICAL_CLASS THC ON THC.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 得到教学班Id
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = ST.THEORETICAL_TASK_ID
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID
;
COMMIT;

/*==============================================================*/
/* VIEW: VCHOC_STUS_CREDIT_NUM_LIMIT 选课门数及学分		        */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_CREDIT_NUM_LIMIT
 AS
SELECT
	(
		TS.USER_ID || '#' || LM.ACADEMIC_YEAR || '#' || LM.SEMESTER_CODE || '#' || CHOICED.COURSE_TYPE_CODE || '#' || CHOICED.COURSE_ATTRIBUTE_CODE || '#' || CHOICED.IS_CORE_CURRICULUM
	) ID,
	TS.USER_ID,
	CL.MAJOR_ID,
	CL.GRADE,
	NVL (
		LM.ACADEMIC_YEAR,
		CHOICED.ACADEMIC_YEAR
	) AS ACADEMIC_YEAR,
	--学年
	NVL (
		LM.SEMESTER_CODE,
		CHOICED.SEMESTER_CODE
	) AS SEMESTER_CODE,
	CHOICED.COURSE_TYPE_CODE,
	CHOICED.COURSE_ATTRIBUTE_CODE,
	CHOICED.IS_CORE_CURRICULUM,
	NVL (CHOICED.CHOICED_CREDIT, 0) AS CHOICED_CREDIT,
	NVL (CHOICED.CHOICED_NUM, 0) AS CHOICED_COURSE_COUNT
FROM
	TSTU_STUDENT TS
JOIN (
	SELECT
		CHOICED.USER_ID,
		CHOICED.ACADEMIC_YEAR,
		CHOICED.SEMESTER_CODE,
		CHOICED.COURSE_TYPE_CODE,
		CHOICED.COURSE_ATTRIBUTE_CODE,
		CHOICED.IS_CORE_CURRICULUM,
		SUM (CHOICED.CREDIT) CHOICED_CREDIT,
		COUNT (1) AS CHOICED_NUM
	FROM
		(
			SELECT DISTINCT
				TCS.TEACHING_CLASS_STUDENT_ID,
				TCS.USER_ID,
				TCS.ACADEMIC_YEAR,
				TCS.SEMESTER_CODE,
				SP.COURSE_TYPE_CODE,
				SP.COURSE_ATTRIBUTE_CODE,
				SP.IS_CORE_CURRICULUM,
				TC.CREDIT
			FROM
				TCHOC_TEACHING_CLASS_STUDENT TCS
			JOIN (
				SELECT
					ACADEMIC_YEAR,
					SEMESTER_CODE,
					ROUND_NAME
				FROM
					TCHOC_ROUND
				WHERE
					IS_OPENED = 1
				AND ROWNUM = 1
			) RN ON TCS.ACADEMIC_YEAR = RN.ACADEMIC_YEAR
			AND TCS.SEMESTER_CODE = RN.SEMESTER_CODE
			LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
			LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论任务关联开课计划表
			LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 开课计划
			LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
		) CHOICED
	GROUP BY
		CHOICED.USER_ID,
		CHOICED.ACADEMIC_YEAR,
		CHOICED.SEMESTER_CODE,
		CHOICED.COURSE_TYPE_CODE,
		CHOICED.COURSE_ATTRIBUTE_CODE,
		CHOICED.IS_CORE_CURRICULUM
) CHOICED ON TS.USER_ID = CHOICED.USER_ID
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = TS.CLASS_ID
LEFT JOIN (
	SELECT
		CNL.ACADEMIC_YEAR,
		CNL.SEMESTER_CODE,
		CNL.CREDIT_LIMIT,
		CNL.COURSE_NUM_LIMIT,
		CNL.MAJOR_ID,
		CNL.GRADE,
		ROUND_NAME
	FROM
		TCHOC_CREDIT_NUM_LIMIT CNL
	JOIN (
		SELECT
			GRADE,
			MAJOR_ID
		FROM
			TTRAP_GRADE_MAJOR
		GROUP BY
			GRADE,
			MAJOR_ID
	) GM ON CNL.MAJOR_ID = GM.MAJOR_ID
	AND CNL.GRADE = GM.GRADE
	JOIN (
		SELECT
			ACADEMIC_YEAR,
			SEMESTER_CODE,
			ROUND_NAME
		FROM
			TCHOC_ROUND
		WHERE
			IS_OPENED = 1
		AND ROWNUM = 1
	) RN ON CNL.ACADEMIC_YEAR = RN.ACADEMIC_YEAR
	AND CNL.SEMESTER_CODE = RN.SEMESTER_CODE
	WHERE
		CNL.COURSE_TYPE_CODE = 'TopCreditLimit'
	AND CNL.COURSE_ATTRIBUTE_CODE = 'TopNumLimit'
) LM ON LM.MAJOR_ID = CL.MAJOR_ID
AND LM.GRADE = TS.GRADE
;
COMMIT;

/*==============================================================*/
/* VIEW: VCHOC_STUS_STUDENT_CHOICE 学生已选课程	        */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_STUDENT_CHOICE
 AS
SELECT DISTINCT
	TCS.TEACHING_CLASS_STUDENT_ID,
	TCS.ACADEMIC_YEAR,
	TCS.SEMESTER_CODE,
	TCS.ROUND_ID,
	TT.COURSE_ID,
	TC.COURSE_NO,
	TC. NAME AS COURSE_NAME,
	TCS.THEORETICAL_TASK_ID,
	TCS.USER_ID,
	TCS.CHOICE_WAY,
	TCS.IS_ADJUST,
	TC.CREDIT,
	TC.TOTAL_PERIOD,
	(
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = SP.COURSE_TYPE_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GTA_COURSE_CATEGORY'
		)
	) || (
		SELECT
			DC.DATA_DICTIONARY_NAME
		FROM
			TSYS_DATA_DICTIONARY DC
		WHERE
			DC.CODE = SP.COURSE_ATTRIBUTE_CODE
		AND DC.PARENT_ID = (
			SELECT
				DD.DATA_DICTIONARY_ID
			FROM
				TSYS_DATA_DICTIONARY DD
			WHERE
				DD.CODE = 'GTA_COURSE_ATTRIBUTE'
		)
	) AS COURSE_TYPE_NAME,
	SP.CHECK_WAY_CODE,
	TEACHER.TEACHER_NAME TEACHER_LIST,
	CASE CHOICE_WAY
WHEN 1 THEN
	'系统置课'
ELSE
	'学生选课'
END AS CHOICE_WAY_NAME
FROM
	TCHOC_TEACHING_CLASS_STUDENT TCS
LEFT JOIN TCOUP_THEORETICAL_TASK TT ON TCS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
LEFT JOIN TSTU_STUDENT TS ON TCS.USER_ID = TS.USER_ID
LEFT JOIN TSTU_CLASS CL ON CL.CLASS_ID = TS.CLASS_ID
LEFT JOIN TSYS_MAJOR MA ON MA.MAJOR_ID = CL.MAJOR_ID
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (
			wm_concat (
				TO_CHAR(tt.TEACHER_NAME)
			),
			',',
			'、'
		) AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID
) TEACHER ON TT.THEORETICAL_TASK_ID = TEACHER.THEORETICAL_TASK_ID -- 教学班任课教师
;
COMMIT;

/*==============================================================*/
/* VIEW: VCHOC_STUS_TEACHINGCLASS 学生选课选教学班	        */
/*==============================================================*/
CREATE OR REPLACE VIEW VCHOC_STUS_TEACHINGCLASS
 AS
SELECT DISTINCT
	AA.ACADEMIC_YEAR,
	--学年
	AA.SEMESTER_CODE,
	--学期
	AA.COURSE_ID,
	--课程Id
	AA.THEORETICAL_TASK_ID,
	--教学班Id
	AA.CREDIT,
	-- 学分
	TT.TEACHING_CLASS_NO,
	--教学班人数
	TT.TEACHING_CLASS_MEMBER_COUNT,
	-- 教学班号
	NVL (TT.CHOICE_LIMIT, 0) CHOICE_LIMIT,
	--教学班可选人数上限
	TEACHER.TEACHER_NAME AS TEACHER_LIST,
	--任课老师
	NVL (CHOICED.CHOICEDNUM, 0) CHOICEDNUM,
	--已选人数
	SP.COURSE_TYPE_CODE,
	--课程类别
	SP.COURSE_ATTRIBUTE_CODE,
	--课程属性
	SP.IS_CORE_CURRICULUM,
	--是否通识课,
	AA.TASK_COUNT,
	-- 排课任务数
	AA.WEEKLY_LIST,
	--周次
	AA.WEEK_LIST,
	-- 周次
	AA.SECTION_LIST,
	-- 星期节次
	AA.SINGLE_DOUBLE_LIST,
	-- 是否单双周
	AA.CAMPUS_ID_LIST,
	--校区ID LIST
	AA.CAMPUS_LIST,
	-- 校区
	AA.BUILDING_LIST,
	-- 楼房
	AA.VENUE_LIST -- 场地
FROM
	(
		SELECT DISTINCT
			ST.ACADEMIC_YEAR,
			ST.SEMESTER_CODE,
			ST.COURSE_ID,
			ST.THEORETICAL_TASK_ID,
			TC.CREDIT,
			wm_concat (
				TO_CHAR (
					CONCAT (
						REPLACE (
							ST.COURSE_ARRANGE_WEEK_LIST,
							',',
							';'
						),
						''
					)
				)
			) AS WEEK_LIST,
			COUNT (0) AS TASK_COUNT,
			wm_concat (
				TO_CHAR (
					CONCAT (
						REPLACE (
							ST.COURSE_ARRANGE_WEEKLY,
							',',
							';'
						),
						''
					)
				)
			) AS WEEKLY_LIST,
			-- 周次
			wm_concat (
				TO_CHAR (
					CONCAT (
						REPLACE (
							ST.COURSE_ARRANGE_SECTION,
							',',
							';'
						),
						''
					)
				)
			) AS SECTION_LIST,
			-- 星期节次
			wm_concat (
				TO_CHAR (
					CONCAT (
						ST.SINGLE_OR_DOUBLE_WEEK,
						''
					)
				)
			) AS SINGLE_DOUBLE_LIST,
			wm_concat (
				TO_CHAR (
					CONCAT (NVL(CA.CAMPUS_ID, '0'), '')
				)
			) AS CAMPUS_ID_LIST,
			-- 是否单双周
			wm_concat (
				TO_CHAR (
					CONCAT (NVL(CA.CAMPUS_NAME, '0'), '')
				)
			) AS CAMPUS_LIST,
			-- 校区:NULL时 以0代替
			wm_concat (
				TO_CHAR (
					CONCAT (
						NVL (BU.BUILDING_NAME, '0'),
						''
					)
				)
			) AS BUILDING_LIST,
			-- 楼房:NULL时 以0代替
			wm_concat (
				TO_CHAR (
					CONCAT (NVL(VE.VENUE_NAME, '0'), '')
				)
			) AS VENUE_LIST -- 场地:NULL时 以0代替
		FROM
			TCOUP_SCHEDULING_TASK ST
		LEFT JOIN TTRAP_COURSE TC ON ST.COURSE_ID = TC.COURSE_ID -- 课程
		LEFT JOIN TSYS_CAMPUS CA ON ST.CAMPUS_ID = CA.CAMPUS_ID
		LEFT JOIN TSYS_BUILDING BU ON ST.BUILDING_ID = BU.BUILDING_ID
		LEFT JOIN TSYS_VENUE VE ON ST.VENUE_ID = VE.VENUE_ID
		GROUP BY
			ST.ACADEMIC_YEAR,
			ST.SEMESTER_CODE,
			ST.COURSE_ID,
			ST.THEORETICAL_TASK_ID,
			TC.CREDIT -- 对排课结果进行分组
	) AA
JOIN TCOUP_THEORETICAL_TASK TT ON AA.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论课程-教学班
LEFT JOIN TCOUP_THEORETICAL_STARTCLASS TS ON TS.THEORETICAL_TASK_ID = TT.THEORETICAL_TASK_ID -- 理论任务关联开课计划表
LEFT JOIN TTRAP_STARTCLASS_PLAN SP ON SP.STARTCLASS_PLAN_ID = TS.STARTCLASS_PLAN_ID -- 开课计划
LEFT JOIN TTRAP_COURSE TC ON TT.COURSE_ID = TC.COURSE_ID -- 课程 得到课程号和名称
LEFT JOIN (
	SELECT
		TTT.THEORETICAL_TASK_ID,
		REPLACE (
			wm_concat (TO_CHAR(tt.TEACHER_NAME)),
			',',
			'、'
		) AS TEACHER_NAME
	FROM
		TCOUP_THEORETICAL_TEACHERS TTT
	LEFT JOIN TSYS_TEACHER TT ON TTT.TEACHER_ID = TT.USER_ID
	GROUP BY
		TTT.THEORETICAL_TASK_ID
) TEACHER ON TT.THEORETICAL_TASK_ID = TEACHER.THEORETICAL_TASK_ID
LEFT JOIN (
	SELECT
		THEORETICAL_TASK_ID,
		COUNT (1) CHOICEDNUM
	FROM
		TCHOC_TEACHING_CLASS_STUDENT TTCS
	GROUP BY
		TTCS.THEORETICAL_TASK_ID
) CHOICED ON TT.THEORETICAL_TASK_ID = CHOICED.THEORETICAL_TASK_ID
ORDER BY
	TT.TEACHING_CLASS_NO ASC
;
commit;
/*==============================================================*/
/* VIEW: VSTU_LESSON  学生对于的调停课信息				        */
/*==============================================================*/
CREATE OR REPLACE VIEW VSTU_LESSON AS
SELECT
	STUDENT.USER_ID || LESSON.COURSE_NO || LESSON.SCHEDULING_TASK_ID || ADJUST_SHUT_ID ID,
	STUDENT.USER_ID STUDENT_ID,
	LESSON.*
FROM
	TCHOC_TEACHING_CLASS_STUDENT STUDENT
LEFT JOIN VCOUP_LESSON LESSON ON LESSON.THEORETICAL_TASK_ID = STUDENT.THEORETICAL_TASK_ID
WHERE LESSON.HANDING_STATUS = 2;
COMMIT;

/*==============================================================*/
/* VIEW: VSTU_STUDENT_SCHEDULE  学生个人课表				        */
/*==============================================================*/
CREATE OR REPLACE VIEW VSTU_STUDENT_SCHEDULE AS
SELECT
  STUDENT.USER_ID ||'#'|| SCHEDULE.SCHEDULING_TASK_ID ID,--一个学生选课教学班有多条排课任务
  AR.ACADEMIC_YEAR,--学年
  AR.SEMESTER_CODE,--学期
  PUBLISH.PUBLISH_STATUS,--发布状态
  STU.USER_ID STUDENT_ID,--学生ID
  STU.STUDENT_NAME, --学生姓名
  COUR."NAME" COURSE_NAME,--课程名称
  THET.TEACHING_CLASS_NO,--教学班号
  "DECODE" (
    SCHEDULE.SCHEDULE_TEACHERS,
    NULL,
    TTS.TEACHERS,
    SCHEDULE.SCHEDULE_TEACHERS
  ) TEACHERS,  --任课教师
  CLAS.CLASS_NAME,  --班级名称
  DEPA.DEPARTMENT_NAME,--院系名称
  CLAS.GRADE,  --年级
  MAJO.MAJOR_NAME,--专业
  SCHEDULE.COURSE_ARRANGE_WEEKLY,--周次
  SCHEDULE.COURSE_ARRANGE_SECTION,--星期节次
  SCHEDULE.SINGLE_OR_DOUBLE_WEEK,--是否单双周
  SCHEDULE.CAMPUS_NAME,--校区
  SCHEDULE.BUILDING_NAME,--楼房
  SCHEDULE.VENUE_NAME,--场地
  PRA.STUDENT_PRACTICE_WEEK--学生实践环节周数
FROM
  TSTU_STUDENT STU --学生选课表
LEFT JOIN TSTU_ARCHIVES_REGISTER AR ON (AR.USER_ID = STU.USER_ID)--学籍表
LEFT JOIN (
SELECT SE.ACADEMIC_YEAR,SE.SEMESTER_CODE, NVL(PUB.PUBLISH_STATUS, 0) PUBLISH_STATUS
  FROM TCOUP_TIME_SETTINGS SE
  LEFT JOIN TCOUP_SCHEDULE_PUBLISH PUB ON PUB.TIME_SETTINGS_ID =
                                          SE.TIME_SETTINGS_ID
) PUBLISH ON AR.ACADEMIC_YEAR= PUBLISH.ACADEMIC_YEAR AND AR.SEMESTER_CODE= PUBLISH.SEMESTER_CODE--课表发布
LEFT JOIN TCHOC_TEACHING_CLASS_STUDENT STUDENT ON (AR.ACADEMIC_YEAR = STUDENT.ACADEMIC_YEAR AND AR.SEMESTER_CODE = STUDENT.SEMESTER_CODE  AND STU.USER_ID = STUDENT.USER_ID) --学生表
LEFT JOIN TCOUP_THEORETICAL_TASK THET ON THET.THEORETICAL_TASK_ID = STUDENT.THEORETICAL_TASK_ID -- 理论任务
LEFT JOIN TTRAP_COURSE COUR ON COUR.COURSE_ID = THET.COURSE_ID -- 课程信息表
LEFT JOIN TSTU_CLASS CLAS ON CLAS.CLASS_ID = AR.CLASS_ID -- 班级信息表
LEFT JOIN TSYS_MAJOR MAJO ON MAJO.MAJOR_ID = CLAS.MAJOR_ID -- 专业信息表
LEFT JOIN TSYS_DEPARTMENT DEPA ON DEPA.DEPARTMENT_ID = MAJO.DEPARTMENT_ID -- 单位（院系）信息表
LEFT JOIN (
  -- 关联理论任务教师
  SELECT DISTINCT
    THETE.THEORETICAL_TASK_ID,
    (
      WMSYS.WM_CONCAT (TO_CHAR(TCR.TEACHER_NAME)) OVER (
        PARTITION BY THETE.THEORETICAL_TASK_ID
      )
    ) TEACHERS
  FROM
    TCOUP_THEORETICAL_TEACHERS THETE
  LEFT JOIN TSYS_TEACHER TCR ON TCR.USER_ID = THETE.TEACHER_ID
) TTS ON TTS.THEORETICAL_TASK_ID = STUDENT.THEORETICAL_TASK_ID
LEFT JOIN (
  SELECT   
    SCHT.SCHEDULING_TASK_ID,
    SCHT.THEORETICAL_TASK_ID,
    SCHT.COURSE_ARRANGE_WEEKLY,
    SCHT.COURSE_ARRANGE_SECTION,
    SCHT.SINGLE_OR_DOUBLE_WEEK,
    CAMP.CAMPUS_NAME,
    BUILDING.BUILDING_NAME,
    VENUE.VENUE_NAME,
    TEACR.SCHEDULE_TEACHERS -- 调代课教师
  FROM
    TCOUP_SCHEDULING_TASK SCHT -- 排课任务表
  LEFT JOIN TSYS_CAMPUS CAMP ON CAMP.CAMPUS_ID = SCHT.CAMPUS_ID -- 校区信息表
  LEFT JOIN TSYS_BUILDING BUILDING ON BUILDING.BUILDING_ID = SCHT.BUILDING_ID -- 楼房信息表
  LEFT JOIN TSYS_VENUE VENUE ON VENUE.VENUE_ID = SCHT.VENUE_ID -- 场地信息表
  LEFT JOIN (
    -- 关联调代课教师
    SELECT DISTINCT
      TEA.SCHEDULING_TASK_ID,
      (
        WMSYS.WM_CONCAT (TO_CHAR(TCR.TEACHER_NAME)) OVER (
          PARTITION BY TEA.SCHEDULING_TASK_ID
        )
      ) SCHEDULE_TEACHERS
    FROM
      TCOUP_SCHEDULE_TEACHER TEA
    LEFT JOIN TSYS_TEACHER TCR ON TCR.USER_ID = TEA.TEACHER_ID
  ) TEACR ON TEACR.SCHEDULING_TASK_ID = SCHT.SCHEDULING_TASK_ID ORDER BY SCHT.SCHEDULING_TASK_ID
) SCHEDULE ON SCHEDULE.THEORETICAL_TASK_ID = STUDENT.THEORETICAL_TASK_ID
LEFT JOIN (
  SELECT DISTINCT
    ACADEMIC_YEAR,
    SEMESTER_CODE,
    STUDENT_ID,
    (
      WMSYS.WM_CONCAT (
        TO_CHAR ("NAME") || '（第' || TO_CHAR (PRACTICE_WEEKS) || '周）'
      ) OVER (
        PARTITION BY ACADEMIC_YEAR,
        SEMESTER_CODE,
        STUDENT_ID
      )
    ) STUDENT_PRACTICE_WEEK
  FROM
    (
      SELECT
        PRAA.ACADEMIC_YEAR,
        PRAA.SEMESTER_CODE,
        PRAS.STUDENT_ID,
        LINKCOU."NAME",
        LINC.PRACTICE_WEEKS
      FROM
        TCOUP_PRACTICAL_STUDENT PRAS
      LEFT JOIN TCOUP_PRACTICAL_ARRANGE PRAA ON PRAA.PRACTICAL_ARRANGE_ID = PRAS.PRACTICAL_ARRANGE_ID
      LEFT JOIN TSTU_ARCHIVES_REGISTER ARCR ON ARCR.ACADEMIC_YEAR = PRAA.ACADEMIC_YEAR
      AND ARCR.SEMESTER_CODE = PRAA.SEMESTER_CODE
      AND ARCR.USER_ID = PRAS.STUDENT_ID
      LEFT JOIN TCOUP_LINK_CLASS_WEEK LINC ON LINC.ACADEMIC_YEAR = PRAA.ACADEMIC_YEAR
      AND LINC.SEMESTER_CODE = PRAA.SEMESTER_CODE
      AND LINC.COURSE_ID = PRAA.COURSE_ID
      AND LINC.CLASS_ID = ARCR.CLASS_ID
      LEFT JOIN TTRAP_COURSE LINKCOU ON LINKCOU.COURSE_ID = LINC.COURSE_ID
      ORDER BY
        PRAA.ACADEMIC_YEAR,
        PRAA.SEMESTER_CODE,
        PRAS.STUDENT_ID,
        LINKCOU."NAME"
    )
) PRA ON (PRA.ACADEMIC_YEAR = AR.ACADEMIC_YEAR
AND PRA.SEMESTER_CODE = AR.SEMESTER_CODE
AND PRA.STUDENT_ID = STU.USER_ID)
WHERE ((PRA.STUDENT_PRACTICE_WEEK IS NOT NULL OR  THET.TEACHING_CLASS_NO IS NOT NULL) and PUBLISH.PUBLISH_STATUS = 1);
COMMIT;


/*==============================================================*/
/* VIEW: VSTU_ARCHIVES_CALENDAR  学籍注册学年学期日历表				        */
/*==============================================================*/
CREATE OR REPLACE VIEW VSTU_ARCHIVES_CALENDAR AS
SELECT 
       AR.ARCHIVES_REGISTER_ID,
       AR.ACADEMIC_YEAR,-- 学年
       AR.SEMESTER_CODE,-- 学期
       AR.USER_ID,-- 用户Id
       SC.IS_CURRENT_SEMESTER-- 默认学期
  FROM TSTU_ARCHIVES_REGISTER AR
  LEFT JOIN TSYS_SCHOOL_CALENDAR SC ON AR.ACADEMIC_YEAR = SC.ACADEMIC_YEAR
                                   AND AR.SEMESTER_CODE = SC.SEMESTER_CODE;
                                   
/*==============================================================*/
/* VIEW: VSTU_TRAINPLAN_MAJOR_THEORY 学生查询培养方案	        */
/*==============================================================*/
CREATE OR REPLACE VIEW VSTU_TRAINPLAN_MAJOR_THEORY AS
SELECT
(c.course_id || t.MAJOR_THEORY_ID  || tr.grade ) id,
c.COURSE_NO,
c.name as COURSE_NAME,
ts.DEPARTMENT_NAME,
c.CREDIT,
c.BIG_COURSE_CODE,
t.COURSE_TYPE_CODE,
t.COURSE_ATTRIBUTE_CODE,
t.THEORY_PERIOD,
t.EXPERI_PERIOD,
t.PRACTICE_PERIOD,
t.OTHER_PERIOD,
t.WEEK_PERIOD,
t.CHECK_WAY_CODE,
T.COURSE_OR_TACHE,
t.TOTAL_PERIOD,
t.WEEK_NUM,
c.TACHE_TYPE_CODE,
tr.GRADE,
t.STARTCLASS_SEMESTER,
tr.MAJOR_ID
from TTRAP_MAJOR_THEORY t 
LEFT JOIN TTRAP_COURSE c on t.COURSE_ID = c.COURSE_ID
LEFT JOIN TSYS_DEPARTMENT ts on c.department_id = ts .department_id
LEFT JOIN TTRAP_GRADE_MAJOR tr on t.grade_major_id = tr.grade_major_id
LEFT JOIN TSYS_MAJOR m on tr .major_Id = m.major_id;

								   
COMMIT;

